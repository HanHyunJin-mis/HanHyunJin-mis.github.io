<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>제어문 연습문제</title>
      <link href="/2019/10/09/191009-%EC%A0%9C%EC%96%B4%EB%AC%B8-%EC%97%B0%EC%8A%B5%EB%AC%B8%EC%A0%9C/"/>
      <url>/2019/10/09/191009-%EC%A0%9C%EC%96%B4%EB%AC%B8-%EC%97%B0%EC%8A%B5%EB%AC%B8%EC%A0%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="1-변수-x가-10보다-크고-20보다-작을-때-변수-x를-출력하는-조건식을-완성하라"><a href="#1-변수-x가-10보다-크고-20보다-작을-때-변수-x를-출력하는-조건식을-완성하라" class="headerlink" title="1. 변수 x가 10보다 크고 20보다 작을 때 변수 x를 출력하는 조건식을 완성하라."></a>1. 변수 x가 10보다 크고 20보다 작을 때 변수 x를 출력하는 조건식을 완성하라.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> x = <span class="hljs-number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> (<span class="hljs-number">10</span> &lt; x &amp;&amp; x &lt; <span class="hljs-number">20</span>) &#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-for문을-사용하여-0부터-10미만의-정수-중에서-짝수만을-작은-수부터-출력하시오"><a href="#2-for문을-사용하여-0부터-10미만의-정수-중에서-짝수만을-작은-수부터-출력하시오" class="headerlink" title="2. for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 출력하시오."></a>2. for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// 첫번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i += <span class="hljs-number">2</span>) &#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 두번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) <span class="hljs-built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-for문을-사용하여-0부터-10미만의-정수-중에서-짝수만을-작은-수부터-문자열로-출력하시오"><a href="#3-for문을-사용하여-0부터-10미만의-정수-중에서-짝수만을-작은-수부터-문자열로-출력하시오" class="headerlink" title="3. for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 문자열로 출력하시오."></a>3. for문을 사용하여 0부터 10미만의 정수 중에서 짝수만을 작은 수부터 문자열로 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> str = <span class="hljs-string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 첫번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i += <span class="hljs-number">2</span>) &#123;</span><br><span class="line">  str += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(str);</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 두번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) str += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><h3 id="4-for문을-사용하여-0부터-10미만의-정수-중에서-홀수만을-큰수부터-출력하시오"><a href="#4-for문을-사용하여-0부터-10미만의-정수-중에서-홀수만을-큰수부터-출력하시오" class="headerlink" title="4. for문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오."></a>4. for문을 사용하여 0부터 10미만의 정수 중에서 홀수만을 큰수부터 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// 첫번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">9</span>; i &gt; <span class="hljs-number">0</span>; i -= <span class="hljs-number">2</span>) &#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 두번째 방법</span></span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">9</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span> === <span class="hljs-number">1</span>) <span class="hljs-built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-while문을-사용하여-0-부터-10-미만의-정수-중에서-짝수만을-작은-수부터-출력하시오"><a href="#5-while문을-사용하여-0-부터-10-미만의-정수-중에서-짝수만을-작은-수부터-출력하시오" class="headerlink" title="5. while문을 사용하여 0 부터 10 미만의 정수 중에서 짝수만을 작은 수부터 출력하시오."></a>5. while문을 사용하여 0 부터 10 미만의 정수 중에서 짝수만을 작은 수부터 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> start = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 첫번째 방법</span></span><br><span class="line"><span class="hljs-keyword">while</span> (start &lt; <span class="hljs-number">10</span>) &#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(start);</span><br><span class="line">  start += <span class="hljs-number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 두번째 방법</span></span><br><span class="line"><span class="hljs-keyword">while</span> (start &lt; <span class="hljs-number">10</span>) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (start % <span class="hljs-number">2</span> === <span class="hljs-number">0</span>) &#123;</span><br><span class="line">    <span class="hljs-built_in">console</span>.log(start);</span><br><span class="line">  &#125;</span><br><span class="line">  start++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-while문을-사용하여-0-부터-10-미만의-정수-중에서-홀수만을-큰수부터-출력하시오"><a href="#6-while문을-사용하여-0-부터-10-미만의-정수-중에서-홀수만을-큰수부터-출력하시오" class="headerlink" title="6. while문을 사용하여 0 부터 10 미만의 정수 중에서 홀수만을 큰수부터 출력하시오."></a>6. while문을 사용하여 0 부터 10 미만의 정수 중에서 홀수만을 큰수부터 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> start = <span class="hljs-number">9</span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 첫번째 방법</span></span><br><span class="line"><span class="hljs-keyword">while</span> (start &gt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(start);</span><br><span class="line">  start -= <span class="hljs-number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 두번째 방법</span></span><br><span class="line"><span class="hljs-keyword">while</span> (start &gt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (start % <span class="hljs-number">2</span> === <span class="hljs-number">1</span>) &#123;</span><br><span class="line">    <span class="hljs-built_in">console</span>.log(start);</span><br><span class="line">  &#125;</span><br><span class="line">  start--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-for-문을-사용하여-0부터-10미만의-정수의-합을-출력하시오"><a href="#7-for-문을-사용하여-0부터-10미만의-정수의-합을-출력하시오" class="headerlink" title="7. for 문을 사용하여 0부터 10미만의 정수의 합을 출력하시오."></a>7. for 문을 사용하여 0부터 10미만의 정수의 합을 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) &#123;</span><br><span class="line">  sum += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><h3 id="8-1부터-20-미만의-정수-중에서-2-또는-3의-배수가-아닌-수의-총합을-구하시오"><a href="#8-1부터-20-미만의-정수-중에서-2-또는-3의-배수가-아닌-수의-총합을-구하시오" class="headerlink" title="8. 1부터 20 미만의 정수 중에서 2 또는 3의 배수가 아닌 수의 총합을 구하시오."></a>8. 1부터 20 미만의 정수 중에서 2 또는 3의 배수가 아닌 수의 총합을 구하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">20</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span> !== <span class="hljs-number">0</span> &amp;&amp; i % <span class="hljs-number">3</span> !== <span class="hljs-number">0</span>) &#123;</span><br><span class="line">    sum += i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><h3 id="9-1부터-20-미만의-정수-중에서-2-또는-3의-배수인-수의-총합을-구하시오"><a href="#9-1부터-20-미만의-정수-중에서-2-또는-3의-배수인-수의-총합을-구하시오" class="headerlink" title="9. 1부터 20 미만의 정수 중에서 2 또는 3의 배수인 수의 총합을 구하시오."></a>9. 1부터 20 미만의 정수 중에서 2 또는 3의 배수인 수의 총합을 구하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">20</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">if</span> (i % <span class="hljs-number">2</span> === <span class="hljs-number">0</span> || i % <span class="hljs-number">3</span> === <span class="hljs-number">0</span>) &#123;</span><br><span class="line">    sum += i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(sum);</span><br></pre></td></tr></table></figure><h3 id="10-두-개의-주사위를-던졌을-때-눈의-합이-6이-되는-모든-경우의-수를-출력하시오"><a href="#10-두-개의-주사위를-던졌을-때-눈의-합이-6이-되는-모든-경우의-수를-출력하시오" class="headerlink" title="10. 두 개의 주사위를 던졌을 때, 눈의 합이 6이 되는 모든 경우의 수를 출력하시오."></a>10. 두 개의 주사위를 던졌을 때, 눈의 합이 6이 되는 모든 경우의 수를 출력하시오.</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">7</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">1</span>; j &lt; <span class="hljs-number">7</span>; j++) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (i + j === <span class="hljs-number">6</span>) &#123;</span><br><span class="line">      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`[<span class="hljs-subst">$&#123;i&#125;</span>, <span class="hljs-subst">$&#123;j&#125;</span>]`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-삼각형-출력하기-pattern-1"><a href="#11-삼각형-출력하기-pattern-1" class="headerlink" title="11. 삼각형 출력하기 - pattern 1"></a>11. 삼각형 출력하기 - pattern 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> star = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; i + <span class="hljs-number">1</span>; j++) &#123;</span><br><span class="line">    star += <span class="hljs-string">"*"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(star);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-삼각형-출력하기-pattern-2"><a href="#12-삼각형-출력하기-pattern-2" class="headerlink" title="12. 삼각형 출력하기 - pattern 2"></a>12. 삼각형 출력하기 - pattern 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> star = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">5</span>; j++) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (i &lt;= j) &#123;</span><br><span class="line">      star += <span class="hljs-string">"*"</span>;</span><br><span class="line">    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">      star += <span class="hljs-string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(star);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-삼각형-출력하기-pattern-3"><a href="#13-삼각형-출력하기-pattern-3" class="headerlink" title="13. 삼각형 출력하기 - pattern 3"></a>13. 삼각형 출력하기 - pattern 3</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> star = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = i; j &lt; <span class="hljs-number">5</span>; j++) &#123;</span><br><span class="line">    star += <span class="hljs-string">"*"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(star);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-삼각형-출력하기-pattern-4"><a href="#14-삼각형-출력하기-pattern-4" class="headerlink" title="14. 삼각형 출력하기 - pattern 4"></a>14. 삼각형 출력하기 - pattern 4</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> star = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &gt;= <span class="hljs-number">0</span>; j--) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">      star += <span class="hljs-string">" "</span>;</span><br><span class="line">    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">      star += <span class="hljs-string">"*"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">  <span class="hljs-built_in">console</span>.log(star);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-정삼각형-출력하기"><a href="#15-정삼각형-출력하기" class="headerlink" title="15. 정삼각형 출력하기"></a>15. 정삼각형 출력하기</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> star = <span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span> - i; j++) &#123;</span><br><span class="line">    star += <span class="hljs-string">" "</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">1</span> + i _ <span class="hljs-number">2</span>; k++) &#123;</span><br><span class="line">    star += <span class="hljs-string">"_"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(star);</span><br></pre></td></tr></table></figure><h3 id="16-역정삼각형-출력하기"><a href="#16-역정삼각형-출력하기" class="headerlink" title="16. 역정삼각형 출력하기"></a>16. 역정삼각형 출력하기</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">let</span> star = <span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span> - i; j++) &#123;</span><br><span class="line">    star += <span class="hljs-string">" "</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">1</span> + i _ <span class="hljs-number">2</span>; k++) &#123;</span><br><span class="line">    star += <span class="hljs-string">"_"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  star += <span class="hljs-string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-built_in">console</span>.log(star);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> for </tag>
            
            <tag> 제어문 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>브라우저 동작 원리</title>
      <link href="/2019/10/09/191009-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC/"/>
      <url>/2019/10/09/191009-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 브라우저 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[191002 LeetCode] MatrixCells in Distance-Order</title>
      <link href="/2019/10/02/191001-LeetCode-1030/"/>
      <url>/2019/10/02/191001-LeetCode-1030/</url>
      
        <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Alice and Bob have candy bars of different sizes: A[i] is the size of the i-th bar of candy that Alice has, and B[j] is the size of the j-th bar of candy that Bob has.</p><p>Since they are friends, they would like to exchange one candy bar each so that after the exchange, they both have the same total amount of candy. (The total amount of candy a person has is the sum of the sizes of candy bars they have.)</p><p>Return an integer array ans where ans[0] is the size of the candy bar that Alice must exchange, and ans[1] is the size of the candy bar that Bob must exchange.</p><p>If there are multiple answers, you may return any one of them. It is guaranteed an answer exists.</p><a id="more"></a><p><br></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: A = [1,1], B = [2,2]</span><br><span class="line">Output: [1,2]</span><br></pre></td></tr></table></figure><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> fairCandySwap = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">A, B</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">let</span> first = A.reduce(<span class="hljs-function">(<span class="hljs-params">pre, cur</span>) =&gt;</span> pre + cur);</span><br><span class="line">  <span class="hljs-keyword">let</span> Aver = <span class="hljs-function">(<span class="hljs-params">first + B.reduce((pre, cur</span>) =&gt;</span> pre + cur)) / <span class="hljs-number">2</span>;</span><br><span class="line">  <span class="hljs-keyword">let</span> Bidx = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; A.length; i++) &#123;</span><br><span class="line">    Bidx = B.indexOf(A[i] - (first - Aver));</span><br><span class="line">    <span class="hljs-keyword">if</span> (Bidx !== <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> [A[i], B[Bidx]];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[191001 LeetCode] Fair Candy Swap</title>
      <link href="/2019/10/01/191001-LeetCode-888/"/>
      <url>/2019/10/01/191001-LeetCode-888/</url>
      
        <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>We are given a matrix with R rows and C columns has cells with integer coordinates (r, c), where 0 &lt;= r &lt; R and 0 &lt;= c &lt; C.</p><p>Additionally, we are given a cell in that matrix with coordinates (r0, c0).</p><p>Return the coordinates of all cells in the matrix, sorted by their distance from (r0, c0) from smallest distance to largest distance. Here, the distance between two cells (r1, c1) and (r2, c2) is the Manhattan distance, |r1 - r2| + |c1 - c2|. (You may return the answer in any order that satisfies this condition.)</p><a id="more"></a><p><br></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: R = 2, C = 3, r0 = 1, c0 = 2</span><br><span class="line">Output: [[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]</span><br><span class="line">Explanation: The distances from (r0, c0) to other cells are: [0,1,1,2,2,3]</span><br><span class="line">There are other answers that would also be accepted as correct, such as [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].</span><br></pre></td></tr></table></figure><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> allCellsDistOrder = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">R, C, r0, c0</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">let</span> Arr = [];</span><br><span class="line">  <span class="hljs-keyword">let</span> subArr = [];</span><br><span class="line">  <span class="hljs-keyword">let</span> <span class="hljs-keyword">get</span> = 0;</span><br><span class="line">  for (let i = 0; i &lt; R; i++) &#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; C; j++) &#123;</span><br><span class="line">      <span class="hljs-keyword">get</span> = Math.abs(i - r0) + Math.abs(j - c0);</span><br><span class="line">      if (!subArr[<span class="hljs-keyword">get</span>]) &#123;</span><br><span class="line">        subArr[<span class="hljs-keyword">get</span>] = [];</span><br><span class="line">      &#125;</span><br><span class="line">      subArr[<span class="hljs-keyword">get</span>][subArr[<span class="hljs-keyword">get</span>].length] = [i, j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  for (let i = 0; i &lt; subArr.length; i++) &#123;</span><br><span class="line">    Arr.push(...subArr[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">return</span> Arr;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[190919 LeetCode] Length of last word</title>
      <link href="/2019/09/19/190919-LeetCode-Length-of-last-word/"/>
      <url>/2019/09/19/190919-LeetCode-Length-of-last-word/</url>
      
        <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string.</p><p>If the last word does not exist, return 0.</p><p>Note: A word is defined as a character sequence consists of non-space characters only.</p><a id="more"></a><p><br></p><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;Hello World&quot;</span><br><span class="line">Output: 5</span><br></pre></td></tr></table></figure><h3 id="Submission"><a href="#Submission" class="headerlink" title="Submission"></a>Submission</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> lengthOfLastWord = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">s</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">let</span> word = s.trim().split(<span class="hljs-string">" "</span>);</span><br><span class="line">  <span class="hljs-keyword">if</span> (word.length &gt;= <span class="hljs-number">1</span>) &#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> OneW = word[word.length - <span class="hljs-number">1</span>];</span><br><span class="line">    <span class="hljs-keyword">return</span> OneW.length;</span><br><span class="line">  &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Double Cola</title>
      <link href="/2019/05/03/%5BCodewars%5D%20190503_%20Double%20Cola/"/>
      <url>/2019/05/03/%5BCodewars%5D%20190503_%20Double%20Cola/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>names라는 배열과 r이라는 수가 들어온다.</li><li>names라는 배열에<br>3.<br>4.</li></ol><h4 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h4><p><code>whoIsNext</code>([“Sheldon”, “Leonard”, “Penny”, “Rajesh”, “Howard”], 1) == <code>&quot;Sheldon&quot;</code><br><code>whoIsNext</code>([“Sheldon”, “Leonard”, “Penny”, “Rajesh”, “Howard”], 52) == <code>&quot;Penny&quot;</code></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">whoIsNext</span>(<span class="hljs-params">names, r</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">while</span> (sum &lt; r) &#123;</span><br><span class="line">    <span class="hljs-keyword">var</span> five = names.length * <span class="hljs-number">2</span> ** count;</span><br><span class="line">    sum += five;</span><br><span class="line">    count++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">var</span> pow = <span class="hljs-number">2</span> ** (count - <span class="hljs-number">1</span>);</span><br><span class="line">  <span class="hljs-keyword">var</span> new_idx = r - (sum - five) - <span class="hljs-number">1</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">return</span> names[<span class="hljs-built_in">parseInt</span>(new_idx / pow)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><pre><code>1.  내풀이 1<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure>2.  풀이 과정 중 어려움five에 표현식을 할당하는 것을 while문 밖에서 선언하니 반복될 때마다 계산이 되지 않았다.names의 length가 경우에 따라 달라질 것이라는 것을 예상하지 못했다.</code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Playing with digits</title>
      <link href="/2019/05/02/%5BCodewars%5D%20190502_Playing%20with%20digits/"/>
      <url>/2019/05/02/%5BCodewars%5D%20190502_Playing%20with%20digits/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li><code>n이라는 정수</code>와 <code>p라는 정수</code> 두가지가 주어진다.</li><li>n이라는 정수의 <code>제일 큰 자릿수(10의 자리, 100의 자리)</code>의 수에 <code>p</code>라는 수만큼 제곱한다.</li><li>그 다음 자릿수에 <code>p+1만큼 제곱</code>한다.</li><li>자릿수가 커질수록 <code>p가 1씩 증가</code>한다.</li><li>제곱수를 모두 더한다.</li><li>더한 제곱수를 처음 <code>n이라는 값으로 나누어서</code> <code>정수이면 나눈 몫을 반환</code>, <code>정수가 아닌 경우에는 -1을 return</code>한다.</li></ol><h4 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h4><p><code>digPow(89, 1)</code> =&gt; 8¹ + 9² = 89 = 89 _ 1 <code>return 1</code><br><code>digPow(92, 1)</code> =&gt; there is no k such as 9¹ + 2² equals 92 _ k <code>return -1</code><br><code>digPow(695, 2)</code> =&gt; 6² + 9³ + 5⁴= 1390 = 695 * 2 <code>return 2</code></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">digPow</span>(<span class="hljs-params">n, p</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> str_num = n.toString();</span><br><span class="line">  <span class="hljs-keyword">var</span> pow = <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str_num.length; i++) &#123;</span><br><span class="line">    pow = <span class="hljs-built_in">Math</span>.pow(str_num[i], p + i);</span><br><span class="line">    sum += pow;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">var</span> int_num = sum / n;</span><br><span class="line"></span><br><span class="line">  <span class="hljs-keyword">if</span> (int_num === <span class="hljs-built_in">parseInt</span>(int_num)) &#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> int_num;</span><br><span class="line">  &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Decode the Morse code</title>
      <link href="/2019/04/30/%5BCodewars%5D%20190430_Decode%20the%20Morse%20code/"/>
      <url>/2019/04/30/%5BCodewars%5D%20190430_Decode%20the%20Morse%20code/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>n</li></ol><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">decodeMorse = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">morseCode</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> str = morseCode.split(<span class="hljs-string">" "</span>);</span><br><span class="line">  <span class="hljs-keyword">var</span> imsi = [];</span><br><span class="line">  <span class="hljs-keyword">var</span> store = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">var</span> join = <span class="hljs-string">""</span>;</span><br><span class="line">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (str[i] == <span class="hljs-string">""</span>) &#123;</span><br><span class="line">      imsi.push(store);</span><br><span class="line">      store = <span class="hljs-string">""</span>;</span><br><span class="line">    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i == str.length - <span class="hljs-number">1</span>) &#123;</span><br><span class="line">      store += MORSE_CODE[str[i]];</span><br><span class="line">      imsi.push(store);</span><br><span class="line">      store = <span class="hljs-string">""</span>;</span><br><span class="line">    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (str[i] != <span class="hljs-string">""</span>) &#123;</span><br><span class="line">      store += MORSE_CODE[str[i]];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="hljs-keyword">var</span> real = [];</span><br><span class="line">  <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; imsi.length; i++) &#123;</span><br><span class="line">    <span class="hljs-keyword">if</span> (imsi[i] != <span class="hljs-string">""</span>) &#123;</span><br><span class="line">      real.push(imsi[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  join = real.join(<span class="hljs-string">" "</span>);</span><br><span class="line">  <span class="hljs-keyword">return</span> join;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4><p>trimLeft, trimRight, trimEnd<br>/ +/ -&gt; 공백이 한개 이상일 때</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sort</title>
      <link href="/2019/04/26/190426/"/>
      <url>/2019/04/26/190426/</url>
      
        <content type="html"><![CDATA[<ol><li>quick sort </li></ol><ul><li>random pivot -&gt; 거의 average로 나옴</li><li>O(n log n) -&gt; average</li></ul><a id="more"></a><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_middle_idx</span><span class="hljs-params">(li, start, mid, end)</span>:</span></span><br><span class="line"><span class="hljs-string">'''</span></span><br><span class="line"><span class="hljs-string">리스트의 맨 처음 값과 중간 값, 마지막 값 중에서 </span></span><br><span class="line"><span class="hljs-string">가운데 값이 위치한 인덱스를 반환한다.</span></span><br><span class="line"><span class="hljs-string">'''</span></span><br><span class="line">idx_li = [start, mid, end]</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> li[idx_li[<span class="hljs-number">0</span>]] &gt; li[idx_li[<span class="hljs-number">1</span>]]:</span><br><span class="line">    idx_li[<span class="hljs-number">1</span>], idx_li[<span class="hljs-number">0</span>] = idx_li[<span class="hljs-number">0</span>], idx_li[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-keyword">if</span> li[idx_li[<span class="hljs-number">1</span>]] &gt; li[idx_li[<span class="hljs-number">2</span>]]:</span><br><span class="line">    idx_li[<span class="hljs-number">1</span>], idx_li[<span class="hljs-number">2</span>] = idx_li[<span class="hljs-number">2</span>], idx_li[<span class="hljs-number">1</span>]</span><br><span class="line"><span class="hljs-keyword">if</span> li[idx_li[<span class="hljs-number">0</span>]] &gt; li[idx_li[<span class="hljs-number">1</span>]]:</span><br><span class="line">    idx_li[<span class="hljs-number">1</span>], idx_li[<span class="hljs-number">0</span>] = idx_li[<span class="hljs-number">0</span>], idx_li[<span class="hljs-number">1</span>]</span><br><span class="line">    </span><br><span class="line"><span class="hljs-keyword">return</span> idx_li[<span class="hljs-number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">quick_sort</span><span class="hljs-params">(li, start, end)</span>:</span></span><br><span class="line"><span class="hljs-keyword">if</span> start &gt;= end:</span><br><span class="line">    <span class="hljs-keyword">return</span></span><br><span class="line">left=start</span><br><span class="line">right=end</span><br><span class="line">mid = (left+right)//<span class="hljs-number">2</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 추가 코드</span></span><br><span class="line">mid_idx=get_middle_idx(li, start, mid, end)</span><br><span class="line">li[mid_idx], li[mid]=li[mid], li[mid_idx]</span><br><span class="line"></span><br><span class="line">pivot=li[mid]</span><br><span class="line"><span class="hljs-keyword">while</span> left &lt;= right:</span><br><span class="line">    <span class="hljs-keyword">while</span> li[left] &lt; pivot:</span><br><span class="line">        left+=<span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">while</span> li[right] &gt; pivot:</span><br><span class="line">        right-=<span class="hljs-number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">if</span> left &lt;= right:</span><br><span class="line">        li[left], li[right]=li[right], li[left]</span><br><span class="line">        left+=<span class="hljs-number">1</span></span><br><span class="line">        right-=<span class="hljs-number">1</span></span><br><span class="line"></span><br><span class="line">quick_sort(li, start, right)</span><br><span class="line">quick_sort(li, left, end)</span><br></pre></td></tr></table></figure><p>실행<br><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> random</span><br><span class="line"><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">"__main__"</span>:</span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">    num_data=int(input(<span class="hljs-string">'데이터 개수(종료:0):'</span>))</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> num_data:</span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line">    data=[random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(num_data)]</span><br><span class="line">    print(data)</span><br><span class="line">    quick_sort(data, <span class="hljs-number">0</span>, len(data)<span class="hljs-number">-1</span>)</span><br><span class="line">    print(data)</span><br></pre></td></tr></table></figure></p><ol start="2"><li>insertion sort, selection sort<br>insertion sort<br>for문이 2개이다 -&gt; 빅O가 n 제곱<br>성능이 제일 좋음<figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">insertion_sort</span><span class="hljs-params">(li)</span>:</span></span><br><span class="line">n = len(li)</span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, n):</span><br><span class="line">    temp = li[i]</span><br><span class="line">    <span class="hljs-comment"># while 문으로 짜는 것이 더 좋음</span></span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range (i<span class="hljs-number">-1</span>,<span class="hljs-number">-2</span> ,<span class="hljs-number">-1</span>):</span><br><span class="line">        <span class="hljs-keyword">if</span> j == <span class="hljs-number">-1</span>:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        <span class="hljs-keyword">if</span> temp &lt; li[j]:</span><br><span class="line">            li[j+<span class="hljs-number">1</span>] = li[j]</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">    li[j + <span class="hljs-number">1</span>] = temp</span><br></pre></td></tr></table></figure></li></ol><p>실행<br><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">"__main__"</span>:</span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">    num_data=int(input(<span class="hljs-string">'데이터 개수(종료:0):'</span>))</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> num_data:</span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line">    data=[random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(num_data)]</span><br><span class="line">    print(data)</span><br><span class="line">    insertion_sort(data)</span><br><span class="line">    print(data)</span><br></pre></td></tr></table></figure></p><p>selection sort<br><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">selection_sort</span><span class="hljs-params">(li)</span>:</span></span><br><span class="line">n = len(li)</span><br><span class="line"><span class="hljs-comment"># i는 0부터 시작</span></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, n<span class="hljs-number">-2</span>):</span><br><span class="line">    min_idx = i</span><br><span class="line">    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(i+<span class="hljs-number">1</span>, n):</span><br><span class="line">        <span class="hljs-keyword">if</span> li[min_idx] &gt; li[j]:</span><br><span class="line">            min_idx = j</span><br><span class="line">    li[i], li[min_idx] = li[min_idx], li[i]</span><br></pre></td></tr></table></figure></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">"__main__"</span>:</span><br><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">    num_data=int(input(<span class="hljs-string">'데이터 개수(종료:0):'</span>))</span><br><span class="line">    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> num_data:</span><br><span class="line">        <span class="hljs-keyword">break</span></span><br><span class="line">    data=[random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(num_data)]</span><br><span class="line">    print(data)</span><br><span class="line">    selection_sort(data)</span><br><span class="line">    print(data)</span><br></pre></td></tr></table></figure><ol start="3"><li>merge sort (어려우면 이 부분이 나올 수 있음, 여기까지는 공부할 것!)<figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">merge</span><span class="hljs-params">(li, start, mid, end)</span>:</span></span><br><span class="line">    merged=[]</span><br><span class="line">    right = mid +<span class="hljs-number">1</span></span><br><span class="line">    left = start</span><br><span class="line">    <span class="hljs-keyword">while</span> left &lt;= mid <span class="hljs-keyword">and</span> right &lt;= end:</span><br><span class="line">        <span class="hljs-keyword">if</span> li[left] &lt; li[right]:</span><br><span class="line">            merged.append(li[left])</span><br><span class="line">            left += <span class="hljs-number">1</span></span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            merged.append(li[right])</span><br><span class="line">            right +=<span class="hljs-number">1</span></span><br><span class="line">            </span><br><span class="line">    <span class="hljs-keyword">while</span> left &lt;= mid:</span><br><span class="line">        merged.append(li[left])</span><br><span class="line">        left += <span class="hljs-number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="hljs-keyword">while</span> right &lt;= end:</span><br><span class="line">        merged.append(li[right])</span><br><span class="line">        right +=<span class="hljs-number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="hljs-comment"># merged를 list에 업로드</span></span><br><span class="line">    li[start : end +<span class="hljs-number">1</span>] = merged</span><br><span class="line">    </span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">merge_sort</span><span class="hljs-params">(li, start, end)</span>:</span></span><br><span class="line">    <span class="hljs-comment"># 기저조건</span></span><br><span class="line">    <span class="hljs-keyword">if</span> start &gt;= end:</span><br><span class="line">        <span class="hljs-keyword">return</span></span><br><span class="line">    mid = (start + end)//<span class="hljs-number">2</span></span><br><span class="line">    merge_sort(li, start, mid)</span><br><span class="line">    merge_sort(li, mid +<span class="hljs-number">1</span>, end)</span><br><span class="line">    </span><br><span class="line">    merge(li, start, mid, end)</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">"__main__"</span>:</span><br><span class="line">    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:</span><br><span class="line">        num_data=int(input(<span class="hljs-string">'데이터 개수(종료:0):'</span>))</span><br><span class="line">        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> num_data:</span><br><span class="line">            <span class="hljs-keyword">break</span></span><br><span class="line">        data=[random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> range(num_data)]</span><br><span class="line">        print(data)</span><br><span class="line">        merge_sort(data, <span class="hljs-number">0</span>, len(data)<span class="hljs-number">-1</span>)</span><br><span class="line">        print(data)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Take a Number And Sum Its Digits Raised To The Consecutive Powers And ....¡Eureka!!</title>
      <link href="/2019/04/26/%5BCodewars%5D%20190426_Eureka/"/>
      <url>/2019/04/26/%5BCodewars%5D%20190426_Eureka/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>n</li></ol><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sumDigPow</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">var</span> li = [];</span><br><span class="line">            <span class="hljs-keyword">while</span> (a &lt; b) &#123;</span><br><span class="line">                <span class="hljs-keyword">var</span> a_arr = [];</span><br><span class="line">                a_arr = a.toString().split(<span class="hljs-string">''</span>);</span><br><span class="line">                <span class="hljs-keyword">var</span> sum = <span class="hljs-number">0</span>;</span><br><span class="line">                <span class="hljs-keyword">for</span> (i = a_arr.length - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;</span><br><span class="line">                    sum += <span class="hljs-built_in">Math</span>.pow(a_arr[i], i + <span class="hljs-number">1</span>);</span><br><span class="line">                    <span class="hljs-keyword">if</span> (sum &gt;= a &amp;&amp; (i != <span class="hljs-number">0</span>)) &#123;</span><br><span class="line">                        <span class="hljs-keyword">break</span>;</span><br><span class="line">                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a == sum) &#123;</span><br><span class="line">                        li.push(a);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                a++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="hljs-keyword">return</span> li;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><pre><code>1.  내풀이 1<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>2.  풀이 과정 중 어려움<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><p>1.</p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hanoi tower</title>
      <link href="/2019/04/24/Hanoi%20tower/"/>
      <url>/2019/04/24/Hanoi%20tower/</url>
      
        <content type="html"><![CDATA[<h3 id="하노이의-탑"><a href="#하노이의-탑" class="headerlink" title="하노이의 탑"></a>하노이의 탑</h3><ol><li>세 개의 기둥과 이 기둥에 꽂을 수 있는 각각 다른 크기의 원판들이 있다.</li><li>처음에는 한 기둥에 원판이 아래부터 큰 순서대로 쌓여있다.</li><li>한 기둥에 꽂혀있는 원판들을 꽂혀있는 순서 그대로 다른 기둥으로 옮겨야 한다.</li></ol><h4 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h4><ol><li>한번에 하나의 원판만 움직일 수 있다.</li><li>큰 원판 위에 작은 원판이 올라갈 수 없다.<a id="more"></a><br><h3 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hanoi</span><span class="hljs-params">(n, _from, _by, _to)</span>:</span> </span><br><span class="line">    <span class="hljs-comment"># base case</span></span><br><span class="line">    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>:</span><br><span class="line">        print(<span class="hljs-string">f'<span class="hljs-subst">&#123;n&#125;</span>번째 쟁반을 <span class="hljs-subst">&#123;_from&#125;</span>에서 <span class="hljs-subst">&#123;_to&#125;</span>로 이동'</span>)</span><br><span class="line">        <span class="hljs-keyword">return</span></span><br><span class="line">    hanoi(n<span class="hljs-number">-1</span>, _from, _to, _by)</span><br><span class="line">    print(<span class="hljs-string">f'<span class="hljs-subst">&#123;n&#125;</span>번째 쟁반을 <span class="hljs-subst">&#123;_from&#125;</span>에서 <span class="hljs-subst">&#123;_to&#125;</span>로 이동'</span>)</span><br><span class="line">    hanoi(n<span class="hljs-number">-1</span>, _by, _from, _to)</span><br><span class="line"></span><br><span class="line">hanoi(<span class="hljs-number">4</span>, <span class="hljs-string">'A'</span>, <span class="hljs-string">'B'</span>, <span class="hljs-string">'C'</span>)</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://user-images.githubusercontent.com/37561451/56805643-b12c4e80-6864-11e9-86d8-fbed88536eb5.PNG" alt="hanoi"><br><br></p><h3 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h3><p>코드가 이해가 가지 않아 직접 적어보았다…</p><p><img src="https://user-images.githubusercontent.com/37561451/56805731-e769ce00-6864-11e9-9b02-316ade20bc1e.PNG" alt="hanoi1"></p><p><img src="https://user-images.githubusercontent.com/37561451/56805738-eb95eb80-6864-11e9-8a51-49d82bc50306.PNG" alt="hanoi2"></p><p><img src="https://user-images.githubusercontent.com/37561451/56805740-ecc71880-6864-11e9-8839-62b26c8d5142.PNG" alt="hanoi3"></p><p><img src="https://user-images.githubusercontent.com/37561451/56805742-ed5faf00-6864-11e9-9cc7-dd528a93975c.PNG" alt="hanoi4"></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190424_TIL</title>
      <link href="/2019/04/24/190424-TIL/"/>
      <url>/2019/04/24/190424-TIL/</url>
      
        <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>hanoi tower(하노이의 탑) 코드 작동원리 이해하기<br><a href="/2019/04/24/Hanoi%20tower/">link</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> TIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>recursion(재귀함수), factorial(계승), fibonacci series(피보나치 수열)</title>
      <link href="/2019/04/23/190423_recursion,%20factorial,%20fibonacci/"/>
      <url>/2019/04/23/190423_recursion,%20factorial,%20fibonacci/</url>
      
        <content type="html"><![CDATA[<h3 id="recursion-재귀함수"><a href="#recursion-재귀함수" class="headerlink" title="recursion (재귀함수)"></a>recursion (재귀함수)</h3><p>함수 호출 도중에 자기 자신을 다시 호출하는 것<br>base case(종료, 탈출, 조건) 필수</p><ol><li>패턴을 찾고 <code>점화식</code>을 만든다!! (<code>점화식</code> : 인접한 항들 사이의 관계식)</li><li><code>기저 조건</code>을 만든다. (코드를 짜기 전에 기초가 되는 조건)</li></ol><a id="more"></a><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    print(n)</span><br><span class="line">    <span class="hljs-comment"># 자기 자신을 호출</span></span><br><span class="line">    func(n<span class="hljs-number">-1</span>)</span><br></pre></td></tr></table></figure><p><strong>print는 I/O 작업이라 느리게 작동한다. (에러가 빨리 안남)</strong></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    <span class="hljs-comment"># base case</span></span><br><span class="line">    <span class="hljs-keyword">if</span> n &lt;= <span class="hljs-number">0</span>:</span><br><span class="line">        <span class="hljs-keyword">return</span></span><br><span class="line">    func(n<span class="hljs-number">-1</span>)</span><br></pre></td></tr></table></figure><p><br></p><h3 id="factorial-계승"><a href="#factorial-계승" class="headerlink" title="factorial (계승)"></a>factorial (계승)</h3><p>3! = 3 <em> 2 </em> 1<br>3! = 3 <em> 2!<br>2! = 2 </em> 1!</p><ol><li>점화식<br>fac(n) = fac(n-1)* n</li></ol><ol start="2"><li>기저 조건<br>n == 1 or n == 0 return 1</li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">factorial</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> n == <span class="hljs-number">0</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">return</span> factorial(n<span class="hljs-number">-1</span>)* n</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">6</span>):</span><br><span class="line">    print(factorial(i))</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 1</span></span><br><span class="line"><span class="hljs-comment"># 2</span></span><br><span class="line"><span class="hljs-comment"># 6</span></span><br><span class="line"><span class="hljs-comment"># 24</span></span><br><span class="line"><span class="hljs-comment"># 120</span></span><br></pre></td></tr></table></figure><p><br></p><h3 id="fibonacci-series-피보나치"><a href="#fibonacci-series-피보나치" class="headerlink" title="fibonacci series (피보나치)"></a>fibonacci series (피보나치)</h3><ol><li>점화식<br>fibo(n) -&gt; n번째 수<br>fibo(n-2) + fibo(n-1)<br>fibo(n) = fibo(n-2) + fibo(n-1)</li></ol><ol start="2"><li>기저 조건<br>if n ==1 then 0<br>if n == 2 then 1</li></ol><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">fibonacci</span><span class="hljs-params">(n)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">0</span></span><br><span class="line">    <span class="hljs-keyword">elif</span> n == <span class="hljs-number">2</span>: <span class="hljs-keyword">return</span> <span class="hljs-number">1</span></span><br><span class="line">    <span class="hljs-keyword">return</span> fibonacci(n<span class="hljs-number">-2</span>) + fibonacci(n<span class="hljs-number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>):</span><br><span class="line">    print(fibonacci(i), end=<span class="hljs-string">"  "</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 0  1  1  2  3  5  8  13  21  34</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Sum of Pairs</title>
      <link href="/2019/04/23/%5BCodewars%5D%20190423_Sum%20of%20Pairs/"/>
      <url>/2019/04/23/%5BCodewars%5D%20190423_Sum%20of%20Pairs/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>ints라는 배열과 s라는 숫자가 주어진다.</li><li>ints라는 배열에서 숫자 두개의 합이 s라는 숫자가 되어야 한다.</li><li>경우가 여러 개일 때는 합인 숫자의 인덱스 들의 수가 가장 작은 것을 반환</li><li>숫자는 자신이 두번 나올 수 없으며, 음수의 배열 값도 존재한다.</li></ol><p>ex. ints = [1, 4, 8, 7, 0, 15], s = 8  </p><p>즉, 1과 7 또는 8과 0일 경우에는 인덱스 수가 가장 작은 1과 7을 반환한다.</p><a id="more"></a><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li>내풀이 1<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">2.  풀이 과정 중 어려움</span><br></pre></td></tr></table></figure></li></ol><p><code>`</code></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><p>1.</p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190423_TIL</title>
      <link href="/2019/04/23/190423-TIL/"/>
      <url>/2019/04/23/190423-TIL/</url>
      
        <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>recursion(재귀함수), factorial(계승), fibonacci(피보나치) 정리<br><a href="/2019/04/23/190423_recursion,%20factorial,%20fibonacci/">link</a></p></li><li><p>Codewars 알고리즘 스터디 후 풀이 리뷰<br><a href="/2019/04/23/[Codewars]%20Sum%20of%20Pairs/">[Codewars] Sum of Pairs</a></p></li><li><p>Codewars 다음 알고리즘 문제 풀이 생각하기<br><a href>[Codewars] Maximum subarray sum</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> TIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190422_TIL</title>
      <link href="/2019/04/22/190422-TIL/"/>
      <url>/2019/04/22/190422-TIL/</url>
      
        <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li><p>컴퓨터 공학 기초 수업 내용 정리</p><ul><li>name space</li><li>stack frame</li><li><p>call by value와 call by reference</p></li><li><p>전역 변수 vs 지역변수</p></li><li><p>linear search, binary search</p></li><li><p><a href="/2019/04/22/190422_variables,%20function,%20closure,%20binary,%20linear%20search/">link</a></p></li></ul></li><li><p>Codewars 알고리즘 스터디 후 풀이 리뷰<br><a href="/2019/04/21/[Codewars]%20Directions%20Reduction/">[Codewars] Directions Reduction</a></p></li><li><p>Codewars 다음 알고리즘 문제 풀이 생각하기<br><a href="/2019/04/23/[Codewars]%20Sum%20of%20Pairs/">[Codewars] Sum of Pairs</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> TIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190422_variables, function, closure, binary, linear search</title>
      <link href="/2019/04/22/190422_variables,%20function,%20closure,%20binary,%20linear%20search/"/>
      <url>/2019/04/22/190422_variables,%20function,%20closure,%20binary,%20linear%20search/</url>
      
        <content type="html"><![CDATA[<h2 id="함수"><a href="#함수" class="headerlink" title="함수"></a>함수</h2><ol><li>namespace</li><li>stack frame</li><li>call by value(왜 call by value와 reference를 나누었을까?)<br> call by reference~<br> call by reference object</li></ol><a id="more"></a><p><br></p><h3 id="전역-변수-global-vs-지역변수-locsl-variable"><a href="#전역-변수-global-vs-지역변수-locsl-variable" class="headerlink" title="전역 변수(global) vs 지역변수(locsl variable)"></a>전역 변수(global) vs 지역변수(locsl variable)</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b = <span class="hljs-number">20</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 실행되지 않았기 때문에 아직 지역변수가 선언되지 않았다</span></span><br><span class="line"><span class="hljs-comment"># 지역변수는 함수가 실행될 때 만들어 진다.</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b=<span class="hljs-number">20</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        c = <span class="hljs-number">30</span></span><br><span class="line">        print(a, b, c)</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"><span class="hljs-comment"># 10 20 30</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># g는 f의 nested function</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b=<span class="hljs-number">20</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        b = <span class="hljs-number">30</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">h</span><span class="hljs-params">()</span>:</span></span><br><span class="line">            c = <span class="hljs-number">30</span></span><br><span class="line">            print(a, b, c)</span><br><span class="line">        h()</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"><span class="hljs-comment"># 10 30 30</span></span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    <span class="hljs-comment"># global이라는 키워드를 사용하면 지역변수를 전역변수로 사용할 수 있다. (파이썬에서만 존재)</span></span><br><span class="line">    <span class="hljs-keyword">global</span> a</span><br><span class="line">    <span class="hljs-comment"># func의 지역변수 a</span></span><br><span class="line">    a = <span class="hljs-number">20</span></span><br><span class="line">    print(a, <span class="hljs-string">'in func'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 밖의 a와 안의 a를 어떻게 구분할 것인가? -&gt; stack frame</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(a, <span class="hljs-string">'in main'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 20 in func</span></span><br><span class="line"><span class="hljs-comment"># 10 in main</span></span><br></pre></td></tr></table></figure><p><br></p><h3 id="name-space"><a href="#name-space" class="headerlink" title="name space"></a>name space</h3><p>공간 안에서 선언된 기호 들을 유일한 범위에 두게 하는 선언 영역?<br>하나의 독립된 공간을 할당해 주는 것?</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    a = <span class="hljs-number">10</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        b = <span class="hljs-number">20</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">h</span><span class="hljs-params">()</span>:</span></span><br><span class="line">            <span class="hljs-comment"># 지역변수가 아닌 변수 중에 b를 골라라(전역도 아님, 상위에 b가 없을 경우 error가 남)</span></span><br><span class="line">            <span class="hljs-keyword">nonlocal</span> b</span><br><span class="line">            b = <span class="hljs-number">30</span></span><br><span class="line">            print(b, <span class="hljs-string">'in h'</span>)</span><br><span class="line">        h()</span><br><span class="line">        print(b, <span class="hljs-string">'in g'</span>)</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 30 in h</span></span><br><span class="line"><span class="hljs-comment"># 30 in g</span></span><br></pre></td></tr></table></figure><p>python test : <a href="http://www.pythontutor.com/visualize.html#mode=display" target="_blank" rel="noopener">http://www.pythontutor.com/visualize.html#mode=display</a>   </p><p><br></p><h3 id="call-by-value-call-by-reference-call-by-object-reference"><a href="#call-by-value-call-by-reference-call-by-object-reference" class="headerlink" title="call by value, call by reference, call by object reference"></a>call by value, call by reference, call by object reference</h3><h3 id="함수를-실행할-때-인자-parameter-를-어떻게-전달할-것인가"><a href="#함수를-실행할-때-인자-parameter-를-어떻게-전달할-것인가" class="headerlink" title="함수를 실행할 때 인자(parameter)를 어떻게 전달할 것인가?"></a>함수를 실행할 때 인자(parameter)를 어떻게 전달할 것인가?</h3><h4 id="call-by-value"><a href="#call-by-value" class="headerlink" title="call by value"></a>call by value</h4><ul><li><p>값을 단순하게 복사함, 인자를 값으로 전달했기 때문에<br>값 10을 복사해서 change_value frame에 10이라는 값을 전달함</p></li><li><p>call by value : <a href="http://www.pythontutor.com/visualize.html#mode=display" target="_blank" rel="noopener">http://www.pythontutor.com/visualize.html#mode=display</a>    </p></li></ul><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// 매개 변수는 오른쪽에서 왼쪽으로 쌓이고 위에서 밑으로 쌓인다.</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change_value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    x = val;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in change_value \n"</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> x = <span class="hljs-number">10</span>;</span><br><span class="line">    change_value(x, <span class="hljs-number">20</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in main \n"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="call-by-reference"><a href="#call-by-reference" class="headerlink" title="call by reference"></a>call by reference</h4><ul><li><p>값의 <code>주소값</code>을 전달한다(참조값) -&gt; <code>주소값</code>을 통해서 언제든지 접근할 수 있음.<br>*x -&gt; 역참조 (함수가 실행되는 도중 stack frame 밖의 데이터에 접근해 수정할 수 있다.) 메모리 자체를 의미</p></li><li><p>call by reference : <a href="https://github.com/ythwork/FDS/blob/master/functions/call_by/call_by_reference/call_by_reference.pdf" target="_blank" rel="noopener">https://github.com/ythwork/FDS/blob/master/functions/call_by/call_by_reference/call_by_reference.pdf</a>  </p></li></ul><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change_value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> * x, <span class="hljs-keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    *x = val;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in change_value \n"</span>, *x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="hljs-comment">// 함수를 호출하면 stack frame이 쌓인다.</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x = <span class="hljs-number">10</span>;</span><br><span class="line">    change_value(&amp;x, <span class="hljs-number">20</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in main \n"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>값을 전달할 때도 주소 ‘값’을 전달 할 때 둘 다 call by value가 맞다.<br>*x가 아니라 x에 새로운 값을 집어 넣었을 때(할당)를 call by reference</p><h4 id="결론-추후에-수정"><a href="#결론-추후에-수정" class="headerlink" title="결론 (추후에 수정)"></a>결론 (추후에 수정)</h4><ul><li><p>call by value<br>어떠한 방법을 쓰더라도 밖의 데이터에 접근이 불가능하다.</p></li><li><p>call by reference<br>stack frame이 쌓였고 실행 주도권이 자신에게 있는 상태에서 자신의 stack frame 밖에 있는 어떤 데이터에 접근해서 수정이 가능한 상태이다.<br>파이썬의 global</p></li></ul><h4 id="call-by-object-reference-call-by-assignment"><a href="#call-by-object-reference-call-by-assignment" class="headerlink" title="call by object reference (call by assignment)"></a>call by object reference (call by assignment)</h4><p>나중에…</p><h3 id="frist-class-function"><a href="#frist-class-function" class="headerlink" title="frist class function"></a>frist class function</h3><h4 id="first-class-function일-수-있는-조건"><a href="#first-class-function일-수-있는-조건" class="headerlink" title="first class function일 수 있는 조건"></a>first class function일 수 있는 조건</h4><ol><li><p>함수를 인자(argument)로 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">(func, a, b)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">return</span> func(a, b)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">(a, b)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line">b = <span class="hljs-number">20</span></span><br><span class="line">f(g, a, b)</span><br><span class="line"><span class="hljs-comment"># -&gt; 함수를 인자로 전달하는 것이 가능하다.</span></span><br><span class="line"><span class="hljs-comment"># 30</span></span><br></pre></td></tr></table></figure></li><li><p>함수를 리턴(return)값으로 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">calc</span><span class="hljs-params">(kind)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> kind ==<span class="hljs-string">'add'</span>:</span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span><span class="hljs-params">(a,b)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">return</span> a + b</span><br><span class="line">        <span class="hljs-keyword">return</span> add</span><br><span class="line">    <span class="hljs-keyword">elif</span> kind ==<span class="hljs-string">'sub'</span>:</span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sub</span><span class="hljs-params">(a, b)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">return</span> a - b</span><br><span class="line">        <span class="hljs-keyword">return</span> sub</span><br><span class="line">adder= calc(<span class="hljs-string">'add'</span>)</span><br><span class="line">adder(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>)</span><br><span class="line"><span class="hljs-comment"># 30</span></span><br></pre></td></tr></table></figure></li><li><p>함수를 변수에 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t = g</span><br><span class="line">t(<span class="hljs-number">20</span>, <span class="hljs-number">30</span>)</span><br><span class="line"><span class="hljs-comment"># 50</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="익명함수-이름이-없는-함수"><a href="#익명함수-이름이-없는-함수" class="headerlink" title="익명함수(이름이 없는 함수)"></a>익명함수(이름이 없는 함수)</h3><p>나중에…</p><h3 id="linear-search-선형-탐색"><a href="#linear-search-선형-탐색" class="headerlink" title="linear search (선형 탐색)"></a>linear search (선형 탐색)</h3><h4 id="알고리즘-성능-평가"><a href="#알고리즘-성능-평가" class="headerlink" title="알고리즘 성능 평가"></a>알고리즘 성능 평가</h4><ol><li>절대 시간 기준 (기준이 될 수 없다.)<br> ex. 함수의 실행이 몇 초안에 끝난다. -&gt; 같은 함수라도 컴퓨터의 성능에 따라 다르다.</li><li>상대 시간 기준<br> 연산 횟수로 잡는다.(+, -, *, and, if) -&gt;가장 지배적인(느린 것) 것을 기준으로 잡는다.<br> li =[5, 4, 3, 1, 2, 10, 25]<br> 여기서 5를 찾으면 최선의 경우 25를 찾으면 최악의 경우이다.(최악의 경우를 기준으로 계산)<br> 예외 - quick sort는 average case로 찾는다 (왜?)</li></ol><h3 id="binary-search-이진-탐색"><a href="#binary-search-이진-탐색" class="headerlink" title="binary search (이진 탐색)"></a>binary search (이진 탐색)</h3><h4 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h4><ol><li>인자로 들어오는 데이터가 정렬이 되어 있어야 한다. (연속될 필요는 없음)</li></ol><p>=&gt; T(n)이 딱 떨어진다.</p>]]></content>
      
      
      <categories>
          
          <category> ComputerEngineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Directions Reduction</title>
      <link href="/2019/04/22/%5BCodewars%5D%20190422_Directions%20Reduction/"/>
      <url>/2019/04/22/%5BCodewars%5D%20190422_Directions%20Reduction/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>불필요한 경로 줄이기</p><ol><li><code>동쪽, 서쪽, 남쪽, 북쪽</code>의 방향이 있다.</li><li><code>남쪽</code>으로 갔다 <code>북쪽</code>으로 가면 원점이므로 불필요한 이동</li><li><code>동쪽</code>으로 갔다 <code>서쪽</code>으로 가면 원점이므로 불필요한 이동</li><li>불필요한 이동을 줄여 최단 이동을 구하기<br>ex.  <code>[&quot;NORTH&quot;, &quot;SOUTH&quot;, &quot;SOUTH&quot;, &quot;EAST&quot;, &quot;WEST&quot;, &quot;NORTH&quot;, &quot;WEST&quot;]</code>   -&gt;   <code>[&quot;WEST&quot;]</code></li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    direc = &#123;</span><br><span class="line">        <span class="hljs-string">"NORTH"</span>: <span class="hljs-string">"SOUTH"</span>,</span><br><span class="line">        <span class="hljs-string">"SOUTH"</span>: <span class="hljs-string">"NORTH"</span>,</span><br><span class="line">        <span class="hljs-string">"EAST"</span>: <span class="hljs-string">"WEST"</span>,</span><br><span class="line">        <span class="hljs-string">"WEST"</span>: <span class="hljs-string">"EAST"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="hljs-keyword">var</span> b = [];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> ((b == []) || (direc[b[b.length - <span class="hljs-number">1</span>]] != arr[i])) &#123;</span><br><span class="line">            b.push(arr[i]);</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">            c = b.pop();</span><br><span class="line">            <span class="hljs-keyword">if</span> (direc[c] == arr[i]) &#123;</span><br><span class="line">                arr.splice(i - <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);</span><br><span class="line">                i = i - <span class="hljs-number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li>dictionary 형태로 각 방향을 key 값으로 value 값을 반대로 할당하기</li><li>배열의 길이만큼 for문을 돌려 빈 배열로 값을 하나씩 이동</li><li>만약 b 배열의 마지막에 다음번 넣으려는 배열과 짝이면 삭제</li></ol><h4 id="풀이-과정-중-어려움"><a href="#풀이-과정-중-어려움" class="headerlink" title="풀이 과정 중 어려움"></a>풀이 과정 중 어려움</h4><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">splice로 배열 두개를 삭제하고 다시 반복문을 돌아갈 때는 i에 2를 빼주어야 한다.</span><br></pre></td></tr></table></figure><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">if</span>(arr.length &lt;= <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">var</span> direction = &#123;<span class="hljs-string">"NORTH"</span>: <span class="hljs-string">"SOUTH"</span>,</span><br><span class="line">                 <span class="hljs-string">"EAST"</span>: <span class="hljs-string">"WEST"</span>,</span><br><span class="line">                 <span class="hljs-string">"SOUTH"</span>: <span class="hljs-string">"NORTH"</span>,</span><br><span class="line">                 <span class="hljs-string">"WEST"</span>: <span class="hljs-string">"EAST"</span>&#125;;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">   <span class="hljs-keyword">if</span>(direction[arr[i]] == arr[i+<span class="hljs-number">1</span>])&#123;</span><br><span class="line">     arr.splice(i, <span class="hljs-number">2</span>);</span><br><span class="line">     i = <span class="hljs-number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="hljs-keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>배열의 해당 요소를 key값으로 가지는 value값이 배열의 다음 값과 같다는 방법</li></ol>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190420_TIL</title>
      <link href="/2019/04/20/190420-TIL/"/>
      <url>/2019/04/20/190420-TIL/</url>
      
        <content type="html"><![CDATA[<h2 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h2><ul><li>Codewars 알고리즘 문제 풀기<br><a href="/2019/04/21/[Codewars]%20Directions%20Reduction/">[Codewars] Directions Reduction</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> TIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TIL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SCSS 특강</title>
      <link href="/2019/04/20/190420_SCSS%20%ED%8A%B9%EA%B0%95/"/>
      <url>/2019/04/20/190420_SCSS%20%ED%8A%B9%EA%B0%95/</url>
      
        <content type="html"><![CDATA[<h2 id="node-sass-설치"><a href="#node-sass-설치" class="headerlink" title="node sass 설치"></a>node sass 설치</h2><ol><li>$ npm i -g node-sass</li><li>$ npm i -D node-sass</li><li>버전확인 : $ node-sass -v<pre><code>$ node -v</code></pre></li></ol><h2 id="SCSS-vs-CSS"><a href="#SCSS-vs-CSS" class="headerlink" title="SCSS vs CSS"></a>SCSS vs CSS</h2><a id="more"></a><p>nesting - 중첩<br>css<br>상위 계층 셀렉터 반복 기입<br><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: block;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span>;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>scss<br>대세는 자바스크립트 안에 css코드를 삽입하는 방식으로 변하고 있음<br>scss 코드를 css코드로 변환시켜주어야 한다.<br><code>전처리</code> - 입력 데이터를 처리하여 컴파일러와 같은 다른 프로그램의 입력으로 사용되는 출력을 생성<br>출처: <a href="https://en.wikipedia.org/wiki/Preprocessing" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Preprocessing</a> </p><p>웹 브라우저에서 스타일링 언어로 인정하는 것은 css하나뿐임<br>scss는 html처럼 nesting 되게 스타일을 작성한다.<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">nav</span> &#123;</span><br><span class="line"><span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-attribute">list-style</span>: none;</span><br><span class="line">  <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="line">    <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="line">    <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="line">      <span class="hljs-attribute">display</span>: block;</span><br><span class="line">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span>;</span><br><span class="line">      <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>그래서 command 입력<br><code>$ node-sass</code>  <code>scss-overview.scss</code>  <code>scss-overview.css</code></p><p>scss 파일을 css파일로 변환한다.</p><p>우리는 변환된 css 파일을 연결</p><p>설치한 node-sass는 이 변환작업을 위한 CLI를 제공한다.<br>CLI란?</p><p>이 변환 작업을 <code>빌드(build)</code> 또는 <code>컴파일(compile)</code> 이라고 한다.<br>또한 이 변환은 반드시 웹이 배포 되는 시점 이전에 처리 되므로 <code>&#39;전처리(preprocess)&#39;</code>이며, 이것이 Sass가 전처리기로 불리는 이유가 이것이다.</p><p>node-sass 명령어<br><code>--watch</code> : [input]의 변화를 지속적으로 감지하여 [output]으로 빌드한다 (input, output에 넣으면 자동으로 계속 빌드된다.)<br>./style/scss : [input]<br>-o ./style/css : [output directory]</p><p>sass를 쓰게 되면 최신 css변수를 지원하지 않는 곳에서도 css를 사용할 수 있다.<br>sass에서는 //을 주석으로 쓸 수 있다.</p><p>‘$’ 문자로 시작되는 식별자로 선언.</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$font-stack</span> : Helvetica, sans-serif;</span><br><span class="line"><span class="hljs-variable">$primary-color</span> : <span class="hljs-number">#333</span>;</span><br><span class="line"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>: <span class="hljs-number">100%</span> <span class="hljs-variable">$font-stack</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-variable">$primary-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>: <span class="hljs-number">100%</span> Helvetica, sans-serif;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$ node-sass ./scss -o ./css</code><br>scss폴더를 만들어 폴더를 통째로 css로 바꿔준다.<br>bundling -&gt; overhead를 줄이기 위해</p><p><code>@import *./partials*;</code><br>sass파일 안에서 sass파일을 불러올 때는 위에 생략 가능</p><p>import로 연결하면 두번째 파일에 연결되어 있는 파일이 같이 css에 적히지만 파일이 두개가 생기는 문제 발생<br><code>두번째 파일 맨 앞</code>에 <code>_(언더바)</code>를 붙이면 된다.<br>ex. _sass-overview2</p><p>@import “./sass-overview2”;<br>import한 위치에 파일 내용이 그대로 붙여짐</p><p>@import <em>./partilas</em>;<br>partials 파일 : 이름이 ‘_’로 시작하는 sass 파일<br>합쳐지는 쪽의 sass 파일(sass-overview.scss)에서 partials 파일 불러오기 :<br>‘@import‘ 룰을 사용 (.sass, .scss 생략 가능)</p><p>sass-overview.scss<br>@import “./sass-overview2”;</p><p>$font-stack : Helvetica, sans-serif;<br>$primary-color : #333;</p><p>body {<br>    font: 100% $font-stack;<br>    color: $primary-color;<br>}</p><p>sass-overview2.scss<br>.element {<br>    width: 100px;<br>}</p><p>sass-overview.css<br>.element {<br>    width: 100px;<br>}<br>body {<br>    font: 100% Helvetica, sans-serif;<br>    color: #333;<br>}</p><p>sass-overview2.css<br>.element {<br>    width: 100px;<br>}</p><p>@mixin<br>‘@mixin’ 디렉티브를 통해 선언하며 함수처럼 매개변수를 받을 수 있음.<br>‘@include’ 디렉티브를 통해 CSS 룰-셋 에서 믹스인을 호출 할 수 있으며, 호출문이 해당 믹스인의 콘텐츠로 치환.</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> transform(<span class="hljs-variable">$property</span>) &#123;</span><br><span class="line">-webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line">-ms-<span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line"><span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.box</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> transform(rotate(<span class="hljs-number">30deg</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.box</span> &#123;</span><br><span class="line"><span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(30deg);</span><br><span class="line"><span class="hljs-attribute">-ms-transform</span>: <span class="hljs-built_in">rotate</span>(30deg);</span><br><span class="line"><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(30deg); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@extend 디렉티브<br>@extned + 상속받고자 하는 룰셋<br>ex.  %message-shared {  //상속을 하고자 하는 룰셋, %를 앞에 작성하면 placeholder 셀렉터<br>    (호출하지 않으면 css파일에 나오지 않음, %가 없으면 실체를 가지게 된다.)가 된다.<br>        border: 1px solid #ccc;<br>        padding: 10px;<br>        color: #333;<br>    }</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">%message-shared &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">%equal-heights &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: flex;</span><br><span class="line"><span class="hljs-attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.message</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.success</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>%message-shared를 상속받은 셀렉터들이 같이 적힌다.</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.message</span>, <span class="hljs-selector-class">.success</span>, <span class="hljs-selector-class">.error</span>, <span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.success</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: green; </span><br><span class="line">&#125;  // 고유하게 갖는 것, extend로 공통으로 상속 받은 룰셋으로 만들지 않았기 때문</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: red; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: yellow; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>operator(연산자)<br>사칙연산<br>모듈러 연산<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.container</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> <span class="hljs-comment">// attribute selector, aside 내에 role이 main인 것을 선택</span></span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role]</span> <span class="hljs-selector-tag">aside</span> 내에 role이라는 attribute를 가지고 있으면 선택</span><br><span class="line"><span class="hljs-selector-attr">[role]</span> 어떤 element이든 상관없이 선택</span><br><span class="line"><span class="hljs-selector-attr">[attribute ~= "value"]</span> : 위치 상관없이 가지고 있는 값</span><br><span class="line">[attribute ^= <span class="hljs-string">"value"</span>] : 시작하는 값</span><br><span class="line">[attribute $= <span class="hljs-string">"value"</span>] : 끝나는 값</span><br><span class="line"></span><br><span class="line">article[role=<span class="hljs-string">"main"</span>] &#123;</span><br><span class="line">float: left;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span> / <span class="hljs-number">960px</span> * <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: right;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span> / <span class="hljs-number">960px</span> * <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.container</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">article</span><span class="hljs-selector-attr">[role="main"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: left;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">62.5%</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: right;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">31.25%</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>기존 CSS 문법을 확장시킨 Sass의 요소들<br>    nested rule<br>    부모 참조 셀렉터 &amp;<br>    nested properties<br>    inline comment</p><p>부모참조 셀렉터<br>article {<br>&amp;.section1 { // 부모참조 셀렉터 &amp;<br>width: 800px;<br>margin:10px auto;<br>font: { // nested properties<br>size:14px;<br>family:’Nanum Gothic’, sans-serif;<br>}<br> &amp;는 안써도 오류는 안난다.</p><p>–css–style<br>$black:#000; // variable</p><p>td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba($black, 0.4);<br>}</p><p>article.section1 table td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba(0, 0, 0, 0.4);<br>}</p><p>룰-셋 블록 내에 선언 시 지역변수.<br>    .x{<br>        $var_name : “var_value”<br>    }</p><p>지역변수 뒤에 ‘!global’ 선언 시 전역변수. (밖에서도 접근할 수 있음)<br>    .x{<br>        $var_name : “var_value” !global<br>    }</p><p>변수 이름 내의 ‘-’ 와 ‘_’ 문자를 구분하지 않음.<br>    $var_name = $var-name<br>    scss<br>    $main-width:100%;</p><pre><code>#sidebar2 {width: ($main_width/10); }css#sidebar2 {width: 10%; }</code></pre><p>‘!default’ 로 기본값 지정 가능.<br>$content: “First content”;<br>$content: “Second content?” !default;<br>default 때문에 무조건 첫번째 데이터 값으로 설정된다.</p><p>#main {<br>content: “First content”;<br>new-content: “First time reference”; }</p><p>data type<br><a href="https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types" target="_blank" rel="noopener">https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types</a><br>scss의 string type은 두가지가 존재<br>“ “가 있는 문자열, “ “가 없는 문자열</p><p>property 이름 안에도 변수의 이름을 넣어 줄 수 있다.<br>prop #{$var}</p><p>$List1 : var1 var2(구분자는 , 와 공백이 가능하다.)<br>$List2 : var1 var2, val3 val 4 (구분자를 섞어서 사용하면 ,를 기준으로 list가 2개 만들어져서 list2에 들어간다, 이중 리스트)</p><p>built in fuction을 줘야만 참조가 가능하다.</p><p>@import<br>css 파일을 불러오는 경우에는 확장자까지 명시해주어야 한다.<br>여러 파일을 불러올  때<br>@import “file1”, “file2”;</p><p>@import “../../node_modules/normalize.css/normalize.css”;<br>를 하게되면 css에서는<br>@import url(“../../node_modules/normalize.css); 로 나온다.</p><p>@media<br>룰 셋 내부에 nested해서 사용할 수 있다. (@media끼리도 가능)</p><p>@extend<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.notice</span> <span class="hljs-selector-tag">a</span>%onlyone &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>:red;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %onlyone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.notice</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: red;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure><p>상속받는 룰셋이 placeholder 안으로 들어가게 된다.</p><p>@at-root<br>중첩을 계속하게 되면 명시도가 높아진다.<br>가독성을 높이면서도 명시도를 높이지 않는 방법<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.sel1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>;</span><br><span class="line">@at-root .sel2 &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;</span><br><span class="line">@at-root .sel3 &#123;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.sel1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel2</span> &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel2</span> <span class="hljs-selector-class">.sel4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>룰을 전역으로 보내준다.</p><p>제어문<br>if(논리 표현식, true일 때, false일 때)<br>.firstClass {<br>    $color: if(true, blue, red);<br>    color:$color<br>}<br>if 논리 표현식 {true일 때} -&gt; false 일 때는 삽입되지 않는다.<br>.txt1 {<br>    color: white;<br>    @if normal == bold { font-weight: bold;}<br>}</p><p>for문</p><p>@for $i(변수선언) from 1 through 5 {<br>.col-#{$i} { width: (100/5*$i)+em;}<br>}</p><p>each<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$usr</span> in bob, john, bill &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-<span class="hljs-attribute">icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">// 전역에서 돌리고 있음, 첫번째 돌 때 bob, 두번째 돌 때 john, 세번째 돌 때 bill이 들어감</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-variable">$ppl</span>: ( usr1:bob, usr2:john, usr3:bill );</span><br><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$key</span>, <span class="hljs-variable">$usr</span> in <span class="hljs-variable">$ppl</span> &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-avatar &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$usr</span>, <span class="hljs-variable">$color</span>, <span class="hljs-variable">$value</span> in (usr1, black, 1), (usr2, red, 2), (usr3, blue, 3) &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-<span class="hljs-attribute">icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>);</span><br><span class="line"><span class="hljs-attribute">border</span>:<span class="hljs-variable">$value</span>+px solid <span class="hljs-variable">$color</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.bob-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bob.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.john-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/john.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.bill-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bill.png"</span>); &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.bob-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bob.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.john-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/john.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.bill-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bill.png"</span>); &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.usr1-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/usr1.png"</span>);</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black; &#125;</span><br></pre></td></tr></table></figure><p>while<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$i</span>:<span class="hljs-number">1</span>;</span><br><span class="line">@<span class="hljs-keyword">while</span> <span class="hljs-variable">$i</span> &lt; 5 &#123;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-</span>#&#123;<span class="hljs-variable">$i</span>&#125; &#123; <span class="hljs-attribute">width</span>: <span class="hljs-number">50</span> * <span class="hljs-variable">$i</span> +px&#125;</span><br><span class="line"><span class="hljs-variable">$i</span> : <span class="hljs-variable">$i</span> + <span class="hljs-number">1</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.col-sm-1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-2</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin<br>매개변수를 주지 않을 때는 괄호 생략 가능<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> boldtext(<span class="hljs-variable">$size</span>, <span class="hljs-variable">$color</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>:&#123; // font를 prefix로 활용</span><br><span class="line">family: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif; </span><br><span class="line">weight:bold;</span><br><span class="line">size:<span class="hljs-variable">$size</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-attribute">color</span>:<span class="hljs-variable">$color</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext(<span class="hljs-number">24px</span>, <span class="hljs-number">#000</span>);</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext( <span class="hljs-variable">$color</span>:red, <span class="hljs-variable">$size</span>:<span class="hljs-number">36px</span>); </span><br><span class="line"><span class="hljs-comment">// 이름과 연결 시켜주면 매개변수의 순서가 달라도 된다.</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>@include<br>디렉티브를 통해 룰 셋에서 mixin을 호출할 수 있다.<br>호출문은 해당 mixin의 콘텐츠로 치환된다.</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-family</span>: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin에서 받는 매개변수의 활용</p><p>마지막 매개변수 뒤에 …을 붙여 변수를 지정하면 javascript의 destructuring(구조 분해) 연산자 처럼 가능하다.<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> box-shadow(<span class="hljs-variable">$shadows</span>...) &#123;</span><br><span class="line">-moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">-webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> box-shadow(<span class="hljs-number">0px</span> 4px 5px <span class="hljs-number">#666</span>, 2px 6px 10px <span class="hljs-number">#999</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line"><span class="hljs-attribute">-moz-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">-webkit-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>; &#125;</span><br></pre></td></tr></table></figure><p>호출문에 … 사용<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> colors(<span class="hljs-variable">$text</span>, <span class="hljs-variable">$background</span>, <span class="hljs-variable">$border</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-variable">$text</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-variable">$background</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-variable">$border</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-variable">$values</span>: <span class="hljs-number">#ff0000</span>, <span class="hljs-number">#00ff00</span>, <span class="hljs-number">#0000ff</span>;</span><br><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> colors(<span class="hljs-variable">$values</span>...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00ff00</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-number">#0000ff</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용1<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-tag">header</span> &#123; </span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="line">@<span class="hljs-keyword">content</span>; <span class="hljs-comment">// #logo가 header의 밑으로 삽입된다.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="hljs-keyword">include</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">header</span> &#123;</span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-tag">header</span> <span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용2</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$breakpoints</span>: (</span><br><span class="line">small: <span class="hljs-number">767px</span>,</span><br><span class="line">medium: <span class="hljs-number">992px</span>,</span><br><span class="line">large: <span class="hljs-number">1200px</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 미디어 쿼리를 만들어줌</span></span><br><span class="line">@<span class="hljs-keyword">mixin</span> respond-to(<span class="hljs-variable">$breakpoint</span>) &#123; </span><br><span class="line"><span class="hljs-comment">// 검사하고 싶은 key이름인 breakpoint가 breakpoints 내에 존재한다면~</span></span><br><span class="line">@<span class="hljs-keyword">if</span> map-has-key(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>) &#123;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: #&#123;<span class="hljs-selector-tag">map</span>-get(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>)&#125;) &#123;</span><br><span class="line">@<span class="hljs-keyword">content</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 예외처리</span></span><br><span class="line">@<span class="hljs-keyword">else</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">warn</span> <span class="hljs-string">"Unfortunately, no value could be retrieved from `#&#123;$breakpoint&#125;`. "</span></span><br><span class="line">+ <span class="hljs-string">"Please make sure it is defined in `$breakpoints` map."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">// respond-to안의 변수인 small이 mixin 안의 검사를 통해 breakpoints 안에 있으므로 </span></span><br><span class="line"><span class="hljs-comment">// #&#123;map-get($breakpoints, $breakpoint)&#125;을 통해 가지고 오고 싶은 small의 값을 가져오게 된다.</span></span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink;</span><br><span class="line">@<span class="hljs-keyword">include</span> respond-to(small) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink; &#125;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: <span class="hljs-number">767px</span>) &#123;</span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato; &#125; &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ComputerEngineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ComputerEngineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Persistent Bugger</title>
      <link href="/2019/04/19/%5BCodewars%5D%20190419_Persistent%20Bugger/"/>
      <url>/2019/04/19/%5BCodewars%5D%20190419_Persistent%20Bugger/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>숫자를 각각 1자리 수로 떼서 곱하기 연산</li><li>자리수가 1이 될 때까지 연산한다.</li><li>1이 될 때까지 연산한 횟수를 return<br>ex.<br><code>39</code> -&gt; 3 x 9 = 27<br><code>27</code> -&gt; 2 x 7 = 14<br><code>14</code> -&gt; 1 x 4 = 4<br><code>return 3</code> </li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> str = num.toString();</span><br><span class="line"><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> sum = <span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line">sum *= <span class="hljs-built_in">Number</span>(str[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">str = sum.toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li><code>num</code>을 <code>string</code>으로 만들기 (<code>num의 길이</code>를 구하기 위해)</li><li>반복문 밖에 <code>num의 길이</code>를 변수에 저장</li><li>반복문 선언 (<code>1. while</code>, <code>2. for</code>)</li><li><code>while</code>문은 num이 한자리 수가 될 때까지 반복을 실행한다.</li><li><code>for</code>문은 num의 자릿수만큼 반복을 실행하며 sum에 각 자리수를 곱한다. (이 때, 문자를 숫자로 변환)</li><li>for문 밖에 각 자릿수를 곱한 <code>sum</code>을 <code>num</code>에 넣어준다.</li></ol><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (num &gt;= <span class="hljs-number">10</span>) &#123;</span><br><span class="line"><span class="hljs-built_in">String</span>(num).split(<span class="hljs-string">""</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">prev, value</span>) </span>&#123;</span><br><span class="line">num = <span class="hljs-built_in">Number</span>(prev) * <span class="hljs-built_in">Number</span>(value);</span><br><span class="line"><span class="hljs-keyword">return</span> num;</span><br><span class="line">&#125;);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>num의 길이를 구해 한자리 수가 될 때까지가 아닌 num자체가 10 미만이 되면 반복문이 끝나게 만듬</li><li><code>reduce ()</code></li></ol><p><br></p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4><p><code>reduce ()</code> 함수는 배열의 각 요소에 실행되고 4개의 인자를 가진다.</p><ol><li>accumulator(누산기)</li><li>currentValue(현재 값)</li><li>currentIndex(현재 인덱스)</li><li>array(원본 배열)<br>reduce 함수의 반환 값은 누산기에 할당되고 reduce 함수가 돌고 있을 때는 유지되기 때문에 최종 결과 값은 하나의 값이 된다.</li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>].reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">accumulator, currentValue, currentIndex, array</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">return</span> accumulator + currentValue;</span><br><span class="line">&#125;,firstValue); </span><br><span class="line"><span class="hljs-comment">// firstValue부터 계산된다. </span></span><br><span class="line"><span class="hljs-comment">// firstValue가 없으면 accumulator는 0, currentValue는 1로 계산된다.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Dubstep</title>
      <link href="/2019/04/18/%5BCodewars%5D%20190418_Dubstep/"/>
      <url>/2019/04/18/%5BCodewars%5D%20190418_Dubstep/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>문자열에서 “WUB”이라는 문자가 단어의 사이 사이에는 1개 이상  </li><li>단어의 맨 끝에는 0개 또는 1개가 올 수 있다.</li><li>“WUB”을 제거하고 단어와 단어 사이에 하나의 공백으로 return<br> ex. WUB  WUB  I  WUB  AM  WUB  WUB  X<br> return  “I AM X”  </li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> join = <span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> arr = [];</span><br><span class="line"><span class="hljs-keyword">var</span> wub = song.replace(<span class="hljs-regexp">/WUB/gi</span>, <span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">var</span> a = wub.split(<span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (a[i] !== <span class="hljs-string">""</span>) &#123;</span><br><span class="line">arr.push(a[i]);</span><br><span class="line">join = arr.join(<span class="hljs-string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> join;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><p><code>/search value/</code> : //사이에 검색할 문자를 입력<br><code>플래그</code><br><code>g</code>는 전체 모든 문자열을 변경한다는 말 : global<br><code>i</code>는 영문 대소문자 구분 없는 검색: case-intensive<br><code>m</code>은 여러 줄 검색 : multi-line search  </p><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/@+/gi</span>;</span><br><span class="line">song1 = song.replace(<span class="hljs-regexp">/WUB/gi</span>, ‘@’).replace(<span class="hljs-regexp">/@+/gi</span>, <span class="hljs-string">' '</span>).replace(<span class="hljs-regexp">/^ | $/gi</span>,‘’);</span><br><span class="line"><span class="hljs-keyword">return</span> song1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li><code>replace(/WUB/gi, &quot; &quot;)</code>에서 공백을 @로 바꿔줌 <code>replace(/WUB/gi, ‘@’)</code></li><li>replace를 한번 더 써서 모든@를 하나의 공백으로 바꿔 줌  </li><li><code>replace(/^ | $/gi,‘’)</code> : 처음 시작부터 공백이 있거나 맨 뒤에 공백이 있으면 삭제  </li></ol><p><br></p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4><p><code>trim( )</code> : 문자열 양 끝의 공백을 제거한다.<br><code>filter(word=&gt;word!=&#39;&#39;)</code> :  word라는 변수와 word가 “”(공백)이 아닌 것을 return<br><code>filter(parameter =&gt; return)</code> : 배열에 사용할 수 있음  </p><p><code>replace(/(^\s*)|(\s*$)/gi, &quot;&quot;)</code>  : 맨 앞과 맨 뒤의 공백 제거<br><code>replace(/(WUB)+/g,&quot; &quot;)</code> : 한번 이상(+)인 WUB를 공백 하나로 바꿔주기  </p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Codewars] Multiples of 3 or 5</title>
      <link href="/2019/04/17/%5BCodewars%5D%20190417_Multiples%20of%203%20or%205/"/>
      <url>/2019/04/17/%5BCodewars%5D%20190417_Multiples%20of%203%20or%205/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>number이하의 숫자가 주어진다.</li><li>number보다 작은 모든 3의 배수를 다 더한다.</li><li>number보다 작은 모든 5의 배수를 다 더한다.</li><li>다 더한 3의 배수와 5의 배수의 합을 return</li><li>단, 3과 5의 공배수는 한번만 더한다.</li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> count3 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> count5 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">3</span>; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;</span><br><span class="line">temp = <span class="hljs-number">3</span> * i;</span><br><span class="line"><span class="hljs-keyword">if</span> ((temp % <span class="hljs-number">5</span>) !== <span class="hljs-number">0</span>) &#123;</span><br><span class="line">count3 += temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">count5 += <span class="hljs-number">5</span> * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count3 + count5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li>number를 각각 3과 5로 나눈 몫을 구한다.</li><li>3의 몫으로 나온 숫자의 미만만큼( i ) 3을 곱하는 반복문으로 3의 배수를 구한다.<br> ex. 몫이 3.5이면 3 x 1, 3 x 2, 3 x 3 = 3, 6, 9를 구함.</li><li>3의 배수를 count3이라는 변수에 모두 더한다.</li><li><p>단, 3 x i 를 5로 나눈 나머지가 0이 된다면(5의 배수라면) 더하지 않는다.</p></li><li><p>5의 몫으로 나온 숫자의 미만만큼( i ) 5를 곱하는 반복문으로 5의 배수를 구한다.<br>ex. 몫이 3.5이면 5 x 1, 5 x 2, 5 x 3 = 5, 10, 15를 구함.</p></li><li>5의 배수를 count5이라는 변수에 모두 더한다.<br><code>3의 배수를 모두 더하는 과정에서 3과 5의 배수를 제거해줬으므로 5의 배수를 더하는 과정에서는 모두 더해도 상관없다.</code></li><li>count3 + count5를 반환한다.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[LeetCode] 27. remove-element</title>
      <link href="/2019/04/16/%5BLeetCode%5D%20190416_27.%20remove-element/"/>
      <url>/2019/04/16/%5BLeetCode%5D%20190416_27.%20remove-element/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>nums에는 정렬되지 않은 배열이 들어옴</li><li>배열 nums에서 val값이 있으면 삭제</li><li>val값이 삭제된 배열 nums의 길이를 return</li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums.indexOf(val) !== <span class="hljs-number">-1</span>) &#123;</span><br><span class="line">            nums.splice(nums.indexOf(val), <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li><p>배열에서 val의 값을 찾아 삭제하기  </p><ul><li><p>indexOf를 사용해서 배열 nums안에 있는 val의 index를 반환</p></li><li><p>splice를 사용해서 배열 nums에서 val의 index를 이용해 제거</p></li></ul></li></ol><ol start="2"><li><p>오류  </p><p>경우 1.</p></li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> nums = [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>] </span><br><span class="line"><span class="hljs-keyword">var</span> val = <span class="hljs-number">2</span></span><br><span class="line">i = <span class="hljs-number">0</span></span><br></pre></td></tr></table></figure><p>일때 nums에서 2가 하나 삭제된다.<br>nums =&gt; [2]</p><p>i = 1 일때 <code>nums의 길이가 1이 되었으므로 nums.length는 1</code>이 되어 반복문을 빠져나온다.<br>nums =&gt; [2]</p><p><strong>오류 발생</strong><br><code>solution</code> : nums가 하나 삭제될때마다 length가 줄어들고 기존 숫자들의 index가 바뀌기 때문에 i에서 1을 빼주어야 한다.</p><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums[i] === val) &#123;</span><br><span class="line">            nums.splice(i, <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>nums의 특정 index값과 val을 비교  </li></ol><p><strong>javascript에는 연산자를 두개를 잘 쓰지 않는다.  ===을 쓸 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190313_hexo</title>
      <link href="/2019/03/13/190313_hexo/"/>
      <url>/2019/03/13/190313_hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="실행-전"><a href="#실행-전" class="headerlink" title="실행 전"></a>실행 전</h3><ol><li>node js, git 설치 필수</li><li>node js 버전에 따라 실행되지 않을 수 있다.</li><li>window는 git bash에서 작업 시 작업 안될 수 있다.</li></ol><a id="more"></a><p><code>npm install -g hexo-cli</code> - 헥소 설치<br><code>hexo --version</code> - 헥소 버전확인<br><code>init blog</code> -블로그(파일) 생성<br><code>cd blog</code> - (블로그 이동)[블로그 안에서 해줘야 함]<br><code>npm install</code> - npm 설치<br><code>npm install hexo-deployer-git --save</code><br><code>hexo new port &quot;title&quot;</code><br><code>hexo generate</code><br><code>hexo server</code> - 서버 확인<br><code>hexo deploy</code></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>190306_git, web</title>
      <link href="/2019/03/06/190306_git,%20web/"/>
      <url>/2019/03/06/190306_git,%20web/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><code>Git</code> :  <code>분산 버전 관리 시스템</code>, 여러 개발자가 같은 프로젝트를 진행할 때 자신의 컴퓨터로 협업하면서 개발이 가능한 시스템이다.  </p><p>git에는 로컬 저장소에 commit하기 전, <code>index 단계</code>가 있다.</p><p><code>index 단계</code>는 <code>stage 영역</code>이라고도  한다.</p><p><code>stage 영역</code> : 작업한 내용을 로컬 저장소에 commit하려고 할 때, commit할 파일에 대한 정보를 저장하는 공간이다.</p><p><br><br><a id="more"></a><br><img src="/images/img/190306/Git.png" width="700" title="test_title" alt="test_alt"> </p><p><br></p><h2 id="Commit-과정-발생한-에러"><a href="#Commit-과정-발생한-에러" class="headerlink" title="Commit 과정 발생한 에러"></a>Commit 과정 발생한 에러</h2><p>git bash로 git에 있는 폴더를 연결을 하다 에러가 났다.</p><p>수업시간에 실습했던 것은 아무 파일이 없는 <code>새 폴더</code>였다.</p><p>하지만 기존에 내 git에 있는 폴더에 새 파일을 commit하려고 하니 에러가 발생했다.</p><p>에러 메세지에는 git –help라는 말과 git –pull이라는 말이 적혀있었는데 솔직히 무슨 말인지 못알아들었었다.</p><p><br></p><p>하지만, 다음 날에 조원과 협업을 하는 과정에서 해결했다.  </p><p>기존 git의 폴더에 저장된 파일이 있을 경우 내 workspace에다 파일을 끌어와야 했다.</p><p><code>[git clone + git폴더 주소 + 주소에 있는 파일을 복사할 내 workspace 폴더의 이름]</code></p><p>이렇게 입력을 먼저 해주고 <code>[git remote get-url origin]</code>과 연결한 workspace 폴더에서 [ls]을 통해 잘 연결되었는지 확인한다.  </p><p><strong>※ 여기서 origin은 기본값</strong></p><p><br></p><h2 id="잘-연결이-되었다면"><a href="#잘-연결이-되었다면" class="headerlink" title="잘 연결이 되었다면!"></a>잘 연결이 되었다면!</h2><pre><code>1. git add index.html (index.html이라는 파일을 만들었다는 가정 하에)2. git commit3. git push -u origin master (-u는 처음 commit할 때 한번만 써주면 된다.)</code></pre><p><strong>※ 중요한 것은 틈틈히 git status를 통해 상태를 확인하면서 작업할 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Unknown_term </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unknown term </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
