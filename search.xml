<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>190422_variables, function, closure, binary, linear search</title>
      <link href="/2019/04/22/190422_variables,%20function,%20closure,%20binary,%20linear%20search/"/>
      <url>/2019/04/22/190422_variables,%20function,%20closure,%20binary,%20linear%20search/</url>
      
        <content type="html"><![CDATA[<h2 id="함수"><a href="#함수" class="headerlink" title="함수"></a>함수</h2><ol><li>namespace</li><li>stack frame</li><li>call by value(왜 call by value와 reference를 나누었을까?)<br> call by reference~<br> call by reference object</li></ol><a id="more"></a><p><br></p><h3 id="전역-변수-global-vs-지역변수-locsl-variable"><a href="#전역-변수-global-vs-지역변수-locsl-variable" class="headerlink" title="전역 변수(global) vs 지역변수(locsl variable)"></a>전역 변수(global) vs 지역변수(locsl variable)</h3><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b = <span class="hljs-number">20</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 실행되지 않았기 때문에 아직 지역변수가 선언되지 않았다</span></span><br><span class="line"><span class="hljs-comment"># 지역변수는 함수가 실행될 때 만들어 진다.</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b=<span class="hljs-number">20</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        c = <span class="hljs-number">30</span></span><br><span class="line">        print(a, b, c)</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"><span class="hljs-comment"># 10 20 30</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># g는 f의 nested function</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    b=<span class="hljs-number">20</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        b = <span class="hljs-number">30</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">h</span><span class="hljs-params">()</span>:</span></span><br><span class="line">            c = <span class="hljs-number">30</span></span><br><span class="line">            print(a, b, c)</span><br><span class="line">        h()</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"><span class="hljs-comment"># 10 30 30</span></span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">func</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    <span class="hljs-comment"># global이라는 키워드를 사용하면 지역변수를 전역변수로 사용할 수 있다. (파이썬에서만 존재)</span></span><br><span class="line">    <span class="hljs-keyword">global</span> a</span><br><span class="line">    <span class="hljs-comment"># func의 지역변수 a</span></span><br><span class="line">    a = <span class="hljs-number">20</span></span><br><span class="line">    print(a, <span class="hljs-string">'in func'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 밖의 a와 안의 a를 어떻게 구분할 것인가? -&gt; stack frame</span></span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line">print(a, <span class="hljs-string">'in main'</span>)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 20 in func</span></span><br><span class="line"><span class="hljs-comment"># 10 in main</span></span><br></pre></td></tr></table></figure><p><br></p><h3 id="name-space"><a href="#name-space" class="headerlink" title="name space"></a>name space</h3><p>공간 안에서 선언된 기호 들을 유일한 범위에 두게 하는 선언 영역?<br>하나의 독립된 공간을 할당해 주는 것?</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    a = <span class="hljs-number">10</span></span><br><span class="line">    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">()</span>:</span></span><br><span class="line">        b = <span class="hljs-number">20</span></span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">h</span><span class="hljs-params">()</span>:</span></span><br><span class="line">            <span class="hljs-comment"># 지역변수가 아닌 변수 중에 b를 골라라(전역도 아님, 상위에 b가 없을 경우 error가 남)</span></span><br><span class="line">            <span class="hljs-keyword">nonlocal</span> b</span><br><span class="line">            b = <span class="hljs-number">30</span></span><br><span class="line">            print(b, <span class="hljs-string">'in h'</span>)</span><br><span class="line">        h()</span><br><span class="line">        print(b, <span class="hljs-string">'in g'</span>)</span><br><span class="line">    g()</span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 30 in h</span></span><br><span class="line"><span class="hljs-comment"># 30 in g</span></span><br></pre></td></tr></table></figure><p>python test : <a href="http://www.pythontutor.com/visualize.html#mode=display" target="_blank" rel="noopener">http://www.pythontutor.com/visualize.html#mode=display</a>   </p><p><br></p><h3 id="call-by-value-call-by-reference-call-by-object-reference"><a href="#call-by-value-call-by-reference-call-by-object-reference" class="headerlink" title="call by value, call by reference, call by object reference"></a>call by value, call by reference, call by object reference</h3><h3 id="함수를-실행할-때-인자-parameter-를-어떻게-전달할-것인가"><a href="#함수를-실행할-때-인자-parameter-를-어떻게-전달할-것인가" class="headerlink" title="함수를 실행할 때 인자(parameter)를 어떻게 전달할 것인가?"></a>함수를 실행할 때 인자(parameter)를 어떻게 전달할 것인가?</h3><h4 id="call-by-value"><a href="#call-by-value" class="headerlink" title="call by value"></a>call by value</h4><ul><li><p>값을 단순하게 복사함, 인자를 값으로 전달했기 때문에<br>값 10을 복사해서 change_value frame에 10이라는 값을 전달함</p></li><li><p>call by value : <a href="http://www.pythontutor.com/visualize.html#mode=display" target="_blank" rel="noopener">http://www.pythontutor.com/visualize.html#mode=display</a>    </p></li></ul><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">// 매개 변수는 오른쪽에서 왼쪽으로 쌓이고 위에서 밑으로 쌓인다.</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change_value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    x = val;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in change_value \n"</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">int</span> x = <span class="hljs-number">10</span>;</span><br><span class="line">    change_value(x, <span class="hljs-number">20</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in main \n"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="call-by-reference"><a href="#call-by-reference" class="headerlink" title="call by reference"></a>call by reference</h4><ul><li><p>값의 <code>주소값</code>을 전달한다(참조값) -&gt; <code>주소값</code>을 통해서 언제든지 접근할 수 있음.<br>*x -&gt; 역참조 (함수가 실행되는 도중 stack frame 밖의 데이터에 접근해 수정할 수 있다.) 메모리 자체를 의미</p></li><li><p>call by reference : <a href="https://github.com/ythwork/FDS/blob/master/functions/call_by/call_by_reference/call_by_reference.pdf" target="_blank" rel="noopener">https://github.com/ythwork/FDS/blob/master/functions/call_by/call_by_reference/call_by_reference.pdf</a>  </p></li></ul><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">change_value</span><span class="hljs-params">(<span class="hljs-keyword">int</span> * x, <span class="hljs-keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    *x = val;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in change_value \n"</span>, *x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="hljs-comment">// 함수를 호출하면 stack frame이 쌓인다.</span></span><br><span class="line">    <span class="hljs-keyword">int</span> x = <span class="hljs-number">10</span>;</span><br><span class="line">    change_value(&amp;x, <span class="hljs-number">20</span>);</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"x : %d in main \n"</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>값을 전달할 때도 주소 ‘값’을 전달 할 때 둘 다 call by value가 맞다.<br>*x가 아니라 x에 새로운 값을 집어 넣었을 때(할당)를 call by reference</p><h4 id="결론-추후에-수정"><a href="#결론-추후에-수정" class="headerlink" title="결론 (추후에 수정)"></a>결론 (추후에 수정)</h4><ul><li><p>call by value<br>어떠한 방법을 쓰더라도 밖의 데이터에 접근이 불가능하다.</p></li><li><p>call by reference<br>stack frame이 쌓였고 실행 주도권이 자신에게 있는 상태에서 자신의 stack frame 밖에 있는 어떤 데이터에 접근해서 수정이 가능한 상태이다.<br>파이썬의 global</p></li></ul><h4 id="call-by-object-reference-call-by-assignment"><a href="#call-by-object-reference-call-by-assignment" class="headerlink" title="call by object reference (call by assignment)"></a>call by object reference (call by assignment)</h4><p>나중에…</p><h3 id="frist-class-function"><a href="#frist-class-function" class="headerlink" title="frist class function"></a>frist class function</h3><h4 id="first-class-function일-수-있는-조건"><a href="#first-class-function일-수-있는-조건" class="headerlink" title="first class function일 수 있는 조건"></a>first class function일 수 있는 조건</h4><ol><li><p>함수를 인자(argument)로 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">f</span><span class="hljs-params">(func, a, b)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">return</span> func(a, b)</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">(a, b)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line">a = <span class="hljs-number">10</span></span><br><span class="line">b = <span class="hljs-number">20</span></span><br><span class="line">f(g, a, b)</span><br><span class="line"><span class="hljs-comment"># -&gt; 함수를 인자로 전달하는 것이 가능하다.</span></span><br><span class="line"><span class="hljs-comment"># 30</span></span><br></pre></td></tr></table></figure></li><li><p>함수를 리턴(return)값으로 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">calc</span><span class="hljs-params">(kind)</span>:</span></span><br><span class="line">    <span class="hljs-keyword">if</span> kind ==<span class="hljs-string">'add'</span>:</span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add</span><span class="hljs-params">(a,b)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">return</span> a + b</span><br><span class="line">        <span class="hljs-keyword">return</span> add</span><br><span class="line">    <span class="hljs-keyword">elif</span> kind ==<span class="hljs-string">'sub'</span>:</span><br><span class="line">        <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sub</span><span class="hljs-params">(a, b)</span>:</span></span><br><span class="line">            <span class="hljs-keyword">return</span> a - b</span><br><span class="line">        <span class="hljs-keyword">return</span> sub</span><br><span class="line">adder= calc(<span class="hljs-string">'add'</span>)</span><br><span class="line">adder(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>)</span><br><span class="line"><span class="hljs-comment"># 30</span></span><br></pre></td></tr></table></figure></li><li><p>함수를 변수에 전달</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t = g</span><br><span class="line">t(<span class="hljs-number">20</span>, <span class="hljs-number">30</span>)</span><br><span class="line"><span class="hljs-comment"># 50</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="익명함수-이름이-없는-함수"><a href="#익명함수-이름이-없는-함수" class="headerlink" title="익명함수(이름이 없는 함수)"></a>익명함수(이름이 없는 함수)</h3><p>나중에…</p><h3 id="linear-search-선형-탐색"><a href="#linear-search-선형-탐색" class="headerlink" title="linear search (선형 탐색)"></a>linear search (선형 탐색)</h3><h4 id="알고리즘-성능-평가"><a href="#알고리즘-성능-평가" class="headerlink" title="알고리즘 성능 평가"></a>알고리즘 성능 평가</h4><ol><li>절대 시간 기준 (기준이 될 수 없다.)<br> ex. 함수의 실행이 몇 초안에 끝난다. -&gt; 같은 함수라도 컴퓨터의 성능에 따라 다르다.</li><li>상대 시간 기준<br> 연산 횟수로 잡는다.(+, -, *, and, if) -&gt;가장 지배적인(느린 것) 것을 기준으로 잡는다.<br> li =[5, 4, 3, 1, 2, 10, 25]<br> 여기서 5를 찾으면 최선의 경우 25를 찾으면 최악의 경우이다.(최악의 경우를 기준으로 계산)<br> 예외 - quick sort는 average case로 찾는다 (왜?)</li></ol><h3 id="binary-search-이진-탐색"><a href="#binary-search-이진-탐색" class="headerlink" title="binary search (이진 탐색)"></a>binary search (이진 탐색)</h3><h4 id="조건"><a href="#조건" class="headerlink" title="조건"></a>조건</h4><ol><li>인자로 들어오는 데이터가 정렬이 되어 있어야 한다. (연속될 필요는 없음)</li></ol><p>=&gt; T(n)이 딱 떨어진다.</p>]]></content>
      
      
      <categories>
          
          <category> Computer Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer Engineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190419_Persistent Bugger</title>
      <link href="/2019/04/21/190419_Persistent%20Bugger/"/>
      <url>/2019/04/21/190419_Persistent%20Bugger/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>숫자를 각각 1자리 수로 떼서 곱하기 연산</li><li>자리수가 1이 될 때까지 연산한다.</li><li>1이 될 때까지 연산한 횟수를 return<br>ex.<br><code>39</code> -&gt; 3 x 9 = 27<br><code>27</code> -&gt; 2 x 7 = 14<br><code>14</code> -&gt; 1 x 4 = 4<br><code>return 3</code> </li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> str = num.toString();</span><br><span class="line"><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> sum = <span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line">sum *= <span class="hljs-built_in">Number</span>(str[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">str = sum.toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li><code>num</code>을 <code>string</code>으로 만들기 (<code>num의 길이</code>를 구하기 위해)</li><li>반복문 밖에 <code>num의 길이</code>를 변수에 저장</li><li>반복문 선언 (<code>1. while</code>, <code>2. for</code>)</li><li><code>while</code>문은 num이 한자리 수가 될 때까지 반복을 실행한다.</li><li><code>for</code>문은 num의 자릿수만큼 반복을 실행하며 sum에 각 자리수를 곱한다. (이 때, 문자를 숫자로 변환)</li><li>for문 밖에 각 자릿수를 곱한 <code>sum</code>을 <code>num</code>에 넣어준다.</li></ol><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (num &gt;= <span class="hljs-number">10</span>) &#123;</span><br><span class="line"><span class="hljs-built_in">String</span>(num).split(<span class="hljs-string">""</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">prev, value</span>) </span>&#123;</span><br><span class="line">num = <span class="hljs-built_in">Number</span>(prev) * <span class="hljs-built_in">Number</span>(value);</span><br><span class="line"><span class="hljs-keyword">return</span> num;</span><br><span class="line">&#125;);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>num의 길이를 구해 한자리 수가 될 때까지가 아닌 num자체가 10 미만이 되면 반복문이 끝나게 만듬</li><li><code>reduce ()</code></li></ol><p><br></p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4><p><code>reduce ()</code> 함수는 배열의 각 요소에 실행되고 4개의 인자를 가진다.</p><ol><li>accumulator(누산기)</li><li>currentValue(현재 값)</li><li>currentIndex(현재 인덱스)</li><li>array(원본 배열)<br>reduce 함수의 반환 값은 누산기에 할당되고 reduce 함수가 돌고 있을 때는 유지되기 때문에 최종 결과 값은 하나의 값이 된다.</li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>].reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">accumulator, currentValue, currentIndex, array</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">return</span> accumulator + currentValue;</span><br><span class="line">&#125;,firstValue); </span><br><span class="line"><span class="hljs-comment">// firstValue부터 계산된다. </span></span><br><span class="line"><span class="hljs-comment">// firstValue가 없으면 accumulator는 0, currentValue는 1로 계산된다.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190422_Directions Reduction</title>
      <link href="/2019/04/21/190422_Directions%20Reduction/"/>
      <url>/2019/04/21/190422_Directions%20Reduction/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><p>불필요한 경로 줄이기</p><ol><li><code>동쪽, 서쪽, 남쪽, 북쪽</code>의 방향이 있다.</li><li><code>남쪽</code>으로 갔다 <code>북쪽</code>으로 가면 원점이므로 불필요한 이동</li><li><code>동쪽</code>으로 갔다 <code>서쪽</code>으로 가면 원점이므로 불필요한 이동</li><li>불필요한 이동을 줄여 최단 이동을 구하기<br>ex.  <code>[&quot;NORTH&quot;, &quot;SOUTH&quot;, &quot;SOUTH&quot;, &quot;EAST&quot;, &quot;WEST&quot;, &quot;NORTH&quot;, &quot;WEST&quot;]</code>   -&gt;   <code>[&quot;WEST&quot;]</code></li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    direc = &#123;</span><br><span class="line">        <span class="hljs-string">"NORTH"</span>: <span class="hljs-string">"SOUTH"</span>,</span><br><span class="line">        <span class="hljs-string">"SOUTH"</span>: <span class="hljs-string">"NORTH"</span>,</span><br><span class="line">        <span class="hljs-string">"EAST"</span>: <span class="hljs-string">"WEST"</span>,</span><br><span class="line">        <span class="hljs-string">"WEST"</span>: <span class="hljs-string">"EAST"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="hljs-keyword">var</span> b = [];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> ((b == []) || (direc[b[b.length - <span class="hljs-number">1</span>]] != arr[i])) &#123;</span><br><span class="line">            b.push(arr[i]);</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">            c = b.pop();</span><br><span class="line">            <span class="hljs-keyword">if</span> (direc[c] == arr[i]) &#123;</span><br><span class="line">                arr.splice(i - <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);</span><br><span class="line">                i = i - <span class="hljs-number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li>dictionary 형태로 각 방향을 key 값으로 value 값을 반대로 할당하기</li><li>배열의 길이만큼 for문을 돌려 빈 배열로 값을 하나씩 이동</li><li>만약 b 배열의 마지막에 다음번 넣으려는 배열과 짝이면 삭제</li></ol><h4 id="풀이-과정-중-어려움"><a href="#풀이-과정-중-어려움" class="headerlink" title="풀이 과정 중 어려움"></a>풀이 과정 중 어려움</h4><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">splice로 배열 두개를 삭제하고 다시 반복문을 돌아갈 때는 i에 2를 빼주어야 한다.</span><br></pre></td></tr></table></figure><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">if</span>(arr.length &lt;= <span class="hljs-number">1</span>) <span class="hljs-keyword">return</span> arr;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">var</span> direction = &#123;<span class="hljs-string">"NORTH"</span>: <span class="hljs-string">"SOUTH"</span>,</span><br><span class="line">                 <span class="hljs-string">"EAST"</span>: <span class="hljs-string">"WEST"</span>,</span><br><span class="line">                 <span class="hljs-string">"SOUTH"</span>: <span class="hljs-string">"NORTH"</span>,</span><br><span class="line">                 <span class="hljs-string">"WEST"</span>: <span class="hljs-string">"EAST"</span>&#125;;</span><br><span class="line"></span><br><span class="line"> <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">   <span class="hljs-keyword">if</span>(direction[arr[i]] == arr[i+<span class="hljs-number">1</span>])&#123;</span><br><span class="line">     arr.splice(i, <span class="hljs-number">2</span>);</span><br><span class="line">     i = <span class="hljs-number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="hljs-keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>배열의 해당 요소를 key값으로 가지는 value값이 배열의 다음 값과 같다는 방법</li></ol>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190420_SCSS 특강</title>
      <link href="/2019/04/20/190420_scss%20%ED%8A%B9%EA%B0%95/"/>
      <url>/2019/04/20/190420_scss%20%ED%8A%B9%EA%B0%95/</url>
      
        <content type="html"><![CDATA[<h2 id="node-sass-설치"><a href="#node-sass-설치" class="headerlink" title="node sass 설치"></a>node sass 설치</h2><ol><li>$ npm i -g node-sass</li><li>$ npm i -D node-sass</li><li>버전확인 : $ node-sass -v<pre><code>$ node -v</code></pre></li></ol><h2 id="SCSS-vs-CSS"><a href="#SCSS-vs-CSS" class="headerlink" title="SCSS vs CSS"></a>SCSS vs CSS</h2><a id="more"></a><p>nesting - 중첩<br>css<br>상위 계층 셀렉터 반복 기입<br><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: block;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span>;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>scss<br>대세는 자바스크립트 안에 css코드를 삽입하는 방식으로 변하고 있음<br>scss 코드를 css코드로 변환시켜주어야 한다.<br><code>전처리</code> - 입력 데이터를 처리하여 컴파일러와 같은 다른 프로그램의 입력으로 사용되는 출력을 생성<br>출처: <a href="https://en.wikipedia.org/wiki/Preprocessing" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Preprocessing</a> </p><p>웹 브라우저에서 스타일링 언어로 인정하는 것은 css하나뿐임<br>scss는 html처럼 nesting 되게 스타일을 작성한다.<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">nav</span> &#123;</span><br><span class="line"><span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="line">  <span class="hljs-attribute">list-style</span>: none;</span><br><span class="line">  <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="line">    <span class="hljs-attribute">display</span>: inline-block;</span><br><span class="line">    <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="line">      <span class="hljs-attribute">display</span>: block;</span><br><span class="line">      <span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span>;</span><br><span class="line">      <span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>그래서 command 입력<br><code>$ node-sass</code>  <code>scss-overview.scss</code>  <code>scss-overview.css</code></p><p>scss 파일을 css파일로 변환한다.</p><p>우리는 변환된 css 파일을 연결</p><p>설치한 node-sass는 이 변환작업을 위한 CLI를 제공한다.<br>CLI란?</p><p>이 변환 작업을 <code>빌드(build)</code> 또는 <code>컴파일(compile)</code> 이라고 한다.<br>또한 이 변환은 반드시 웹이 배포 되는 시점 이전에 처리 되므로 <code>&#39;전처리(preprocess)&#39;</code>이며, 이것이 Sass가 전처리기로 불리는 이유가 이것이다.</p><p>node-sass 명령어<br><code>--watch</code> : [input]의 변화를 지속적으로 감지하여 [output]으로 빌드한다 (input, output에 넣으면 자동으로 계속 빌드된다.)<br>./style/scss : [input]<br>-o ./style/css : [output directory]</p><p>sass를 쓰게 되면 최신 css변수를 지원하지 않는 곳에서도 css를 사용할 수 있다.<br>sass에서는 //을 주석으로 쓸 수 있다.</p><p>‘$’ 문자로 시작되는 식별자로 선언.</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$font-stack</span> : Helvetica, sans-serif;</span><br><span class="line"><span class="hljs-variable">$primary-color</span> : <span class="hljs-number">#333</span>;</span><br><span class="line"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>: <span class="hljs-number">100%</span> <span class="hljs-variable">$font-stack</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-variable">$primary-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>: <span class="hljs-number">100%</span> Helvetica, sans-serif;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$ node-sass ./scss -o ./css</code><br>scss폴더를 만들어 폴더를 통째로 css로 바꿔준다.<br>bundling -&gt; overhead를 줄이기 위해</p><p><code>@import *./partials*;</code><br>sass파일 안에서 sass파일을 불러올 때는 위에 생략 가능</p><p>import로 연결하면 두번째 파일에 연결되어 있는 파일이 같이 css에 적히지만 파일이 두개가 생기는 문제 발생<br><code>두번째 파일 맨 앞</code>에 <code>_(언더바)</code>를 붙이면 된다.<br>ex. _sass-overview2</p><p>@import “./sass-overview2”;<br>import한 위치에 파일 내용이 그대로 붙여짐</p><p>@import <em>./partilas</em>;<br>partials 파일 : 이름이 ‘_’로 시작하는 sass 파일<br>합쳐지는 쪽의 sass 파일(sass-overview.scss)에서 partials 파일 불러오기 :<br>‘@import‘ 룰을 사용 (.sass, .scss 생략 가능)</p><p>sass-overview.scss<br>@import “./sass-overview2”;</p><p>$font-stack : Helvetica, sans-serif;<br>$primary-color : #333;</p><p>body {<br>    font: 100% $font-stack;<br>    color: $primary-color;<br>}</p><p>sass-overview2.scss<br>.element {<br>    width: 100px;<br>}</p><p>sass-overview.css<br>.element {<br>    width: 100px;<br>}<br>body {<br>    font: 100% Helvetica, sans-serif;<br>    color: #333;<br>}</p><p>sass-overview2.css<br>.element {<br>    width: 100px;<br>}</p><p>@mixin<br>‘@mixin’ 디렉티브를 통해 선언하며 함수처럼 매개변수를 받을 수 있음.<br>‘@include’ 디렉티브를 통해 CSS 룰-셋 에서 믹스인을 호출 할 수 있으며, 호출문이 해당 믹스인의 콘텐츠로 치환.</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> transform(<span class="hljs-variable">$property</span>) &#123;</span><br><span class="line">-webkit-<span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line">-ms-<span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line"><span class="hljs-attribute">transform</span>: <span class="hljs-variable">$property</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.box</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> transform(rotate(<span class="hljs-number">30deg</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.box</span> &#123;</span><br><span class="line"><span class="hljs-attribute">-webkit-transform</span>: <span class="hljs-built_in">rotate</span>(30deg);</span><br><span class="line"><span class="hljs-attribute">-ms-transform</span>: <span class="hljs-built_in">rotate</span>(30deg);</span><br><span class="line"><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(30deg); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@extend 디렉티브<br>@extned + 상속받고자 하는 룰셋<br>ex.  %message-shared {  //상속을 하고자 하는 룰셋, %를 앞에 작성하면 placeholder 셀렉터<br>    (호출하지 않으면 css파일에 나오지 않음, %가 없으면 실체를 가지게 된다.)가 된다.<br>        border: 1px solid #ccc;<br>        padding: 10px;<br>        color: #333;<br>    }</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">%message-shared &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">%equal-heights &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: flex;</span><br><span class="line"><span class="hljs-attribute">flex-wrap</span>: wrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.message</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.success</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %message-shared;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>%message-shared를 상속받은 셀렉터들이 같이 적힌다.</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.message</span>, <span class="hljs-selector-class">.success</span>, <span class="hljs-selector-class">.error</span>, <span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#333</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.success</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: green; </span><br><span class="line">&#125;  // 고유하게 갖는 것, extend로 공통으로 상속 받은 룰셋으로 만들지 않았기 때문</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: red; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.warning</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: yellow; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>operator(연산자)<br>사칙연산<br>모듈러 연산<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.container</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> <span class="hljs-comment">// attribute selector, aside 내에 role이 main인 것을 선택</span></span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role]</span> <span class="hljs-selector-tag">aside</span> 내에 role이라는 attribute를 가지고 있으면 선택</span><br><span class="line"><span class="hljs-selector-attr">[role]</span> 어떤 element이든 상관없이 선택</span><br><span class="line"><span class="hljs-selector-attr">[attribute ~= "value"]</span> : 위치 상관없이 가지고 있는 값</span><br><span class="line">[attribute ^= <span class="hljs-string">"value"</span>] : 시작하는 값</span><br><span class="line">[attribute $= <span class="hljs-string">"value"</span>] : 끝나는 값</span><br><span class="line"></span><br><span class="line">article[role=<span class="hljs-string">"main"</span>] &#123;</span><br><span class="line">float: left;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">600px</span> / <span class="hljs-number">960px</span> * <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: right;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span> / <span class="hljs-number">960px</span> * <span class="hljs-number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.container</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">article</span><span class="hljs-selector-attr">[role="main"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: left;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">62.5%</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">aside</span><span class="hljs-selector-attr">[role="complementary"]</span> &#123;</span><br><span class="line"><span class="hljs-attribute">float</span>: right;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">31.25%</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>기존 CSS 문법을 확장시킨 Sass의 요소들<br>    nested rule<br>    부모 참조 셀렉터 &amp;<br>    nested properties<br>    inline comment</p><p>부모참조 셀렉터<br>article {<br>&amp;.section1 { // 부모참조 셀렉터 &amp;<br>width: 800px;<br>margin:10px auto;<br>font: { // nested properties<br>size:14px;<br>family:’Nanum Gothic’, sans-serif;<br>}<br> &amp;는 안써도 오류는 안난다.</p><p>–css–style<br>$black:#000; // variable</p><p>td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba($black, 0.4);<br>}</p><p>article.section1 table td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba(0, 0, 0, 0.4);<br>}</p><p>룰-셋 블록 내에 선언 시 지역변수.<br>    .x{<br>        $var_name : “var_value”<br>    }</p><p>지역변수 뒤에 ‘!global’ 선언 시 전역변수. (밖에서도 접근할 수 있음)<br>    .x{<br>        $var_name : “var_value” !global<br>    }</p><p>변수 이름 내의 ‘-’ 와 ‘_’ 문자를 구분하지 않음.<br>    $var_name = $var-name<br>    scss<br>    $main-width:100%;</p><pre><code>#sidebar2 {width: ($main_width/10); }css#sidebar2 {width: 10%; }</code></pre><p>‘!default’ 로 기본값 지정 가능.<br>$content: “First content”;<br>$content: “Second content?” !default;<br>default 때문에 무조건 첫번째 데이터 값으로 설정된다.</p><p>#main {<br>content: “First content”;<br>new-content: “First time reference”; }</p><p>data type<br><a href="https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types" target="_blank" rel="noopener">https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types</a><br>scss의 string type은 두가지가 존재<br>“ “가 있는 문자열, “ “가 없는 문자열</p><p>property 이름 안에도 변수의 이름을 넣어 줄 수 있다.<br>prop #{$var}</p><p>$List1 : var1 var2(구분자는 , 와 공백이 가능하다.)<br>$List2 : var1 var2, val3 val 4 (구분자를 섞어서 사용하면 ,를 기준으로 list가 2개 만들어져서 list2에 들어간다, 이중 리스트)</p><p>built in fuction을 줘야만 참조가 가능하다.</p><p>@import<br>css 파일을 불러오는 경우에는 확장자까지 명시해주어야 한다.<br>여러 파일을 불러올  때<br>@import “file1”, “file2”;</p><p>@import “../../node_modules/normalize.css/normalize.css”;<br>를 하게되면 css에서는<br>@import url(“../../node_modules/normalize.css); 로 나온다.</p><p>@media<br>룰 셋 내부에 nested해서 사용할 수 있다. (@media끼리도 가능)</p><p>@extend<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.notice</span> <span class="hljs-selector-tag">a</span>%onlyone &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>:red;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">extend</span> %onlyone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.notice</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.error</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: red;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold; &#125;</span><br></pre></td></tr></table></figure><p>상속받는 룰셋이 placeholder 안으로 들어가게 된다.</p><p>@at-root<br>중첩을 계속하게 되면 명시도가 높아진다.<br>가독성을 높이면서도 명시도를 높이지 않는 방법<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.sel1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>;</span><br><span class="line">@at-root .sel2 &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>:<span class="hljs-number">10px</span>;</span><br><span class="line">@at-root .sel3 &#123;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.sel1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding-top</span>: <span class="hljs-number">10px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel2</span> &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">20px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.sel2</span> <span class="hljs-selector-class">.sel4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">16px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>룰을 전역으로 보내준다.</p><p>제어문<br>if(논리 표현식, true일 때, false일 때)<br>.firstClass {<br>    $color: if(true, blue, red);<br>    color:$color<br>}<br>if 논리 표현식 {true일 때} -&gt; false 일 때는 삽입되지 않는다.<br>.txt1 {<br>    color: white;<br>    @if normal == bold { font-weight: bold;}<br>}</p><p>for문</p><p>@for $i(변수선언) from 1 through 5 {<br>.col-#{$i} { width: (100/5*$i)+em;}<br>}</p><p>each<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$usr</span> in bob, john, bill &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-<span class="hljs-attribute">icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">// 전역에서 돌리고 있음, 첫번째 돌 때 bob, 두번째 돌 때 john, 세번째 돌 때 bill이 들어감</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-variable">$ppl</span>: ( usr1:bob, usr2:john, usr3:bill );</span><br><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$key</span>, <span class="hljs-variable">$usr</span> in <span class="hljs-variable">$ppl</span> &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-avatar &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="hljs-keyword">each</span> <span class="hljs-variable">$usr</span>, <span class="hljs-variable">$color</span>, <span class="hljs-variable">$value</span> in (usr1, black, 1), (usr2, red, 2), (usr3, blue, 3) &#123;</span><br><span class="line">.#&#123;<span class="hljs-variable">$usr</span>&#125;-<span class="hljs-attribute">icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: url(<span class="hljs-string">'/img/#&#123;$usr&#125;.png'</span>);</span><br><span class="line"><span class="hljs-attribute">border</span>:<span class="hljs-variable">$value</span>+px solid <span class="hljs-variable">$color</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.bob-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bob.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.john-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/john.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.bill-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bill.png"</span>); &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.bob-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bob.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.john-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/john.png"</span>); &#125;</span><br><span class="line"><span class="hljs-selector-class">.bill-avatar</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/bill.png"</span>); &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.usr1-icon</span> &#123;</span><br><span class="line"><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">"/img/usr1.png"</span>);</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid black; &#125;</span><br></pre></td></tr></table></figure><p>while<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$i</span>:<span class="hljs-number">1</span>;</span><br><span class="line">@<span class="hljs-keyword">while</span> <span class="hljs-variable">$i</span> &lt; 5 &#123;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-</span>#&#123;<span class="hljs-variable">$i</span>&#125; &#123; <span class="hljs-attribute">width</span>: <span class="hljs-number">50</span> * <span class="hljs-variable">$i</span> +px&#125;</span><br><span class="line"><span class="hljs-variable">$i</span> : <span class="hljs-variable">$i</span> + <span class="hljs-number">1</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.col-sm-1</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-2</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>; &#125;</span><br><span class="line"><span class="hljs-selector-class">.col-sm-4</span> &#123;</span><br><span class="line"><span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin<br>매개변수를 주지 않을 때는 괄호 생략 가능<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> boldtext(<span class="hljs-variable">$size</span>, <span class="hljs-variable">$color</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>:&#123; // font를 prefix로 활용</span><br><span class="line">family: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif; </span><br><span class="line">weight:bold;</span><br><span class="line">size:<span class="hljs-variable">$size</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-attribute">color</span>:<span class="hljs-variable">$color</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext(<span class="hljs-number">24px</span>, <span class="hljs-number">#000</span>);</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext( <span class="hljs-variable">$color</span>:red, <span class="hljs-variable">$size</span>:<span class="hljs-number">36px</span>); </span><br><span class="line"><span class="hljs-comment">// 이름과 연결 시켜주면 매개변수의 순서가 달라도 된다.</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>@include<br>디렉티브를 통해 룰 셋에서 mixin을 호출할 수 있다.<br>호출문은 해당 mixin의 콘텐츠로 치환된다.</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-family</span>: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin에서 받는 매개변수의 활용</p><p>마지막 매개변수 뒤에 …을 붙여 변수를 지정하면 javascript의 destructuring(구조 분해) 연산자 처럼 가능하다.<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> box-shadow(<span class="hljs-variable">$shadows</span>...) &#123;</span><br><span class="line">-moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">-webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> box-shadow(<span class="hljs-number">0px</span> 4px 5px <span class="hljs-number">#666</span>, 2px 6px 10px <span class="hljs-number">#999</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line"><span class="hljs-attribute">-moz-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">-webkit-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>; &#125;</span><br></pre></td></tr></table></figure><p>호출문에 … 사용<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> colors(<span class="hljs-variable">$text</span>, <span class="hljs-variable">$background</span>, <span class="hljs-variable">$border</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-variable">$text</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-variable">$background</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-variable">$border</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-variable">$values</span>: <span class="hljs-number">#ff0000</span>, <span class="hljs-number">#00ff00</span>, <span class="hljs-number">#0000ff</span>;</span><br><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> colors(<span class="hljs-variable">$values</span>...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00ff00</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-number">#0000ff</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용1<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-tag">header</span> &#123; </span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="line">@<span class="hljs-keyword">content</span>; <span class="hljs-comment">// #logo가 header의 밑으로 삽입된다.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="hljs-keyword">include</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">header</span> &#123;</span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-tag">header</span> <span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용2</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$breakpoints</span>: (</span><br><span class="line">small: <span class="hljs-number">767px</span>,</span><br><span class="line">medium: <span class="hljs-number">992px</span>,</span><br><span class="line">large: <span class="hljs-number">1200px</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 미디어 쿼리를 만들어줌</span></span><br><span class="line">@<span class="hljs-keyword">mixin</span> respond-to(<span class="hljs-variable">$breakpoint</span>) &#123; </span><br><span class="line"><span class="hljs-comment">// 검사하고 싶은 key이름인 breakpoint가 breakpoints 내에 존재한다면~</span></span><br><span class="line">@<span class="hljs-keyword">if</span> map-has-key(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>) &#123;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: #&#123;<span class="hljs-selector-tag">map</span>-get(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>)&#125;) &#123;</span><br><span class="line">@<span class="hljs-keyword">content</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 예외처리</span></span><br><span class="line">@<span class="hljs-keyword">else</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">warn</span> <span class="hljs-string">"Unfortunately, no value could be retrieved from `#&#123;$breakpoint&#125;`. "</span></span><br><span class="line">+ <span class="hljs-string">"Please make sure it is defined in `$breakpoints` map."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">// respond-to안의 변수인 small이 mixin 안의 검사를 통해 breakpoints 안에 있으므로 </span></span><br><span class="line"><span class="hljs-comment">// #&#123;map-get($breakpoints, $breakpoint)&#125;을 통해 가지고 오고 싶은 small의 값을 가져오게 된다.</span></span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink;</span><br><span class="line">@<span class="hljs-keyword">include</span> respond-to(small) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink; &#125;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: <span class="hljs-number">767px</span>) &#123;</span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato; &#125; &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Computer Engineering </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer Engineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190418_Dubstep</title>
      <link href="/2019/04/18/190418-Dubstep/"/>
      <url>/2019/04/18/190418-Dubstep/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>문자열에서 “WUB”이라는 문자가 단어의 사이 사이에는 1개 이상  </li><li>단어의 맨 끝에는 0개 또는 1개가 올 수 있다.</li><li>“WUB”을 제거하고 단어와 단어 사이에 하나의 공백으로 return<br> ex. WUB  WUB  I  WUB  AM  WUB  WUB  X<br> return  “I AM X”  </li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> join = <span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> arr = [];</span><br><span class="line"><span class="hljs-keyword">var</span> wub = song.replace(<span class="hljs-regexp">/WUB/gi</span>, <span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">var</span> a = wub.split(<span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (a[i] !== <span class="hljs-string">""</span>) &#123;</span><br><span class="line">arr.push(a[i]);</span><br><span class="line">join = arr.join(<span class="hljs-string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> join;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><p><code>/search value/</code> : //사이에 검색할 문자를 입력<br><code>플래그</code><br><code>g</code>는 전체 모든 문자열을 변경한다는 말 : global<br><code>i</code>는 영문 대소문자 구분 없는 검색: case-intensive<br><code>m</code>은 여러 줄 검색 : multi-line search  </p><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/@+/gi</span>;</span><br><span class="line">song1 = song.replace(<span class="hljs-regexp">/WUB/gi</span>, ‘@’).replace(<span class="hljs-regexp">/@+/gi</span>, <span class="hljs-string">' '</span>).replace(<span class="hljs-regexp">/^ | $/gi</span>,‘’);</span><br><span class="line"><span class="hljs-keyword">return</span> song1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li><code>replace(/WUB/gi, &quot; &quot;)</code>에서 공백을 @로 바꿔줌 <code>replace(/WUB/gi, ‘@’)</code></li><li>replace를 한번 더 써서 모든@를 하나의 공백으로 바꿔 줌  </li><li><code>replace(/^ | $/gi,‘’)</code> : 처음 시작부터 공백이 있거나 맨 뒤에 공백이 있으면 삭제  </li></ol><p><br></p><h4 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h4><p><code>trim( )</code> : 문자열 양 끝의 공백을 제거한다.<br><code>filter(word=&gt;word!=&#39;&#39;)</code> :  word라는 변수와 word가 “”(공백)이 아닌 것을 return<br><code>filter(parameter =&gt; return)</code> : 배열에 사용할 수 있음  </p><p><code>replace(/(^\s*)|(\s*$)/gi, &quot;&quot;)</code>  : 맨 앞과 맨 뒤의 공백 제거<br><code>replace(/(WUB)+/g,&quot; &quot;)</code> : 한번 이상(+)인 WUB를 공백 하나로 바꿔주기  </p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190417_Multiples of 3 or 5</title>
      <link href="/2019/04/16/190417_Multiples%20of%203%20or%205/"/>
      <url>/2019/04/16/190417_Multiples%20of%203%20or%205/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>number이하의 숫자가 주어진다.</li><li>number보다 작은 모든 3의 배수를 다 더한다.</li><li>number보다 작은 모든 5의 배수를 다 더한다.</li><li>다 더한 3의 배수와 5의 배수의 합을 return</li><li>단, 3과 5의 공배수는 한번만 더한다.</li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> count3 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> count5 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">3</span>; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;</span><br><span class="line">temp = <span class="hljs-number">3</span> * i;</span><br><span class="line"><span class="hljs-keyword">if</span> ((temp % <span class="hljs-number">5</span>) !== <span class="hljs-number">0</span>) &#123;</span><br><span class="line">count3 += temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">count5 += <span class="hljs-number">5</span> * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count3 + count5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li>number를 각각 3과 5로 나눈 몫을 구한다.</li><li>3의 몫으로 나온 숫자의 미만만큼( i ) 3을 곱하는 반복문으로 3의 배수를 구한다.<br> ex. 몫이 3.5이면 3 x 1, 3 x 2, 3 x 3 = 3, 6, 9를 구함.</li><li>3의 배수를 count3이라는 변수에 모두 더한다.</li><li><p>단, 3 x i 를 5로 나눈 나머지가 0이 된다면(5의 배수라면) 더하지 않는다.</p></li><li><p>5의 몫으로 나온 숫자의 미만만큼( i ) 5를 곱하는 반복문으로 5의 배수를 구한다.<br>ex. 몫이 3.5이면 5 x 1, 5 x 2, 5 x 3 = 5, 10, 15를 구함.</p></li><li>5의 배수를 count5이라는 변수에 모두 더한다.<br><code>3의 배수를 모두 더하는 과정에서 3과 5의 배수를 제거해줬으므로 5의 배수를 더하는 과정에서는 모두 더해도 상관없다.</code></li><li>count3 + count5를 반환한다.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190416_remove-element</title>
      <link href="/2019/04/16/190416_remove-element/"/>
      <url>/2019/04/16/190416_remove-element/</url>
      
        <content type="html"><![CDATA[<h3 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h3><ol><li>nums에는 정렬되지 않은 배열이 들어옴</li><li>배열 nums에서 val값이 있으면 삭제</li><li>val값이 삭제된 배열 nums의 길이를 return</li></ol><a id="more"></a><p><br></p><h3 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums.indexOf(val) !== <span class="hljs-number">-1</span>) &#123;</span><br><span class="line">            nums.splice(nums.indexOf(val), <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h3><ol><li><p>배열에서 val의 값을 찾아 삭제하기  </p><ul><li><p>indexOf를 사용해서 배열 nums안에 있는 val의 index를 반환</p></li><li><p>splice를 사용해서 배열 nums에서 val의 index를 이용해 제거</p></li></ul></li></ol><ol start="2"><li><p>오류  </p><p>경우 1.</p></li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> nums = [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>] </span><br><span class="line"><span class="hljs-keyword">var</span> val = <span class="hljs-number">2</span></span><br><span class="line">i = <span class="hljs-number">0</span></span><br></pre></td></tr></table></figure><p>일때 nums에서 2가 하나 삭제된다.<br>nums =&gt; [2]</p><p>i = 1 일때 <code>nums의 길이가 1이 되었으므로 nums.length는 1</code>이 되어 반복문을 빠져나온다.<br>nums =&gt; [2]</p><p><strong>오류 발생</strong><br><code>solution</code> : nums가 하나 삭제될때마다 length가 줄어들고 기존 숫자들의 index가 바뀌기 때문에 i에서 1을 빼주어야 한다.</p><p><br></p><h3 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums[i] === val) &#123;</span><br><span class="line">            nums.splice(i, <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h4><ol><li>nums의 특정 index값과 val을 비교  </li></ol><p><strong>javascript에는 연산자를 두개를 잘 쓰지 않는다.  ===을 쓸 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190313_hexo</title>
      <link href="/2019/03/13/190313_hexo/"/>
      <url>/2019/03/13/190313_hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="실행-전"><a href="#실행-전" class="headerlink" title="실행 전"></a>실행 전</h3><ol><li>node js, git 설치 필수</li><li>node js 버전에 따라 실행되지 않을 수 있다.</li><li>window는 git bash에서 작업 시 작업 안될 수 있다.</li></ol><a id="more"></a><p><code>npm install -g hexo-cli</code> - 헥소 설치<br><code>hexo --version</code> - 헥소 버전확인<br><code>init blog</code> -블로그(파일) 생성<br><code>cd blog</code> - (블로그 이동)[블로그 안에서 해줘야 함]<br><code>npm install</code> - npm 설치<br><code>npm install hexo-deployer-git --save</code><br><code>hexo new port &quot;title&quot;</code><br><code>hexo generate</code><br><code>hexo server</code> - 서버 확인<br><code>hexo deploy</code></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>190306_git, web</title>
      <link href="/2019/03/06/190306_git,%20web/"/>
      <url>/2019/03/06/190306_git,%20web/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><code>Git</code> :  <code>분산 버전 관리 시스템</code>, 여러 개발자가 같은 프로젝트를 진행할 때 자신의 컴퓨터로 협업하면서 개발이 가능한 시스템이다.  </p><p>git에는 로컬 저장소에 commit하기 전, <code>index 단계</code>가 있다.</p><p><code>index 단계</code>는 <code>stage 영역</code>이라고도  한다.</p><p><code>stage 영역</code> : 작업한 내용을 로컬 저장소에 commit하려고 할 때, commit할 파일에 대한 정보를 저장하는 공간이다.</p><p><br><br><a id="more"></a><br><img src="/images/img/190306/Git.png" width="700" title="test_title" alt="test_alt"></p><p><br></p><h2 id="Commit-과정-발생한-에러"><a href="#Commit-과정-발생한-에러" class="headerlink" title="Commit 과정 발생한 에러"></a>Commit 과정 발생한 에러</h2><p>git bash로 git에 있는 폴더를 연결을 하다 에러가 났다.</p><p>수업시간에 실습했던 것은 아무 파일이 없는 <code>새 폴더</code>였다.</p><p>하지만 기존에 내 git에 있는 폴더에 새 파일을 commit하려고 하니 에러가 발생했다.</p><p>에러 메세지에는 git –help라는 말과 git –pull이라는 말이 적혀있었는데 솔직히 무슨 말인지 못알아들었었다.</p><p><br></p><p>하지만, 다음 날에 조원과 협업을 하는 과정에서 해결했다.  </p><p>기존 git의 폴더에 저장된 파일이 있을 경우 내 workspace에다 파일을 끌어와야 했다.</p><p><code>[git clone + git폴더 주소 + 주소에 있는 파일을 복사할 내 workspace 폴더의 이름]</code></p><p>이렇게 입력을 먼저 해주고 <code>[git remote get-url origin]</code>과 연결한 workspace 폴더에서 [ls]을 통해 잘 연결되었는지 확인한다.  </p><p><strong>※ 여기서 origin은 기본값</strong></p><p><br></p><h2 id="잘-연결이-되었다면"><a href="#잘-연결이-되었다면" class="headerlink" title="잘 연결이 되었다면!"></a>잘 연결이 되었다면!</h2><pre><code>1. git add index.html (index.html이라는 파일을 만들었다는 가정 하에)2. git commit3. git push -u origin master (-u는 처음 commit할 때 한번만 써주면 된다.)</code></pre><p><strong>※ 중요한 것은 틈틈히 git status를 통해 상태를 확인하면서 작업할 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Unknown term </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unknown term </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
