<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>190419_Persistent Bugger</title>
      <link href="/2019/04/21/190419_Persistent%20Bugger/"/>
      <url>/2019/04/21/190419_Persistent%20Bugger/</url>
      
        <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><ol><li>숫자를 각각 1자리 수로 떼서 곱하기 연산</li><li>자리수가 1이 될 때까지 연산한다.</li><li>1이 될 때까지 연산한 횟수를 return<br>ex. 39 -&gt; 3 x 9 = 27<br> 27 -&gt; 2 x 7 = 14<br> 14 -&gt; 1 x 4 = 4<br> return 3  </li></ol><a id="more"></a><p><br></p><h2 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> str = num.toString();</span><br><span class="line"><span class="hljs-keyword">var</span> count = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> sum = <span class="hljs-number">1</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (str.length !== <span class="hljs-number">1</span>) &#123;</span><br><span class="line">sum *= <span class="hljs-built_in">Number</span>(str[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">str = sum.toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h2><ol><li>num을 string으로 만들기 (num의 길이를 구하기 위해)</li><li>반복문 밖에 num의 길이를 변수에 저장</li><li>반복문 선언 (1. while, 2. for)</li><li>while문은 num이 한자리 수가 될 때까지 반복을 실행한다.</li><li>for문은 num의 자릿수만큼 반복을 실행하며 sum에 각 자리수를 곱한다. (이 때, 문자를 숫자로 변환)</li><li>for문 밖에 각 자릿수를 곱한 sum을 num에 넣어준다.</li></ol><p><br></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">persistence</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">while</span> (num &gt;= <span class="hljs-number">10</span>) &#123;</span><br><span class="line"><span class="hljs-built_in">String</span>(num).split(<span class="hljs-string">""</span>).reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">prev, value</span>) </span>&#123;</span><br><span class="line">num = <span class="hljs-built_in">Number</span>(prev) * <span class="hljs-built_in">Number</span>(value);</span><br><span class="line"><span class="hljs-keyword">return</span> num;</span><br><span class="line">&#125;);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h3 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h3><ol><li>num의 길이를 구해 한자리 수가 될 때까지가 아닌 num자체가 10 미만이 되면 반복문이 끝나게 만듬</li><li>reduce ()</li></ol><p><br></p><h3 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h3><p>reduce () 함수는 배열의 각 요소에 실행되고 4개의 인자를 가진다.</p><ol><li>accumulator(누산기)</li><li>currentValue(현재 값)</li><li>currentIndex(현재 인덱스)</li><li>array(원본 배열)<br>reduce 함수의 반환 값은 누산기에 할당되고 reduce 함수가 돌고 있을 때는 유지되기 때문에 최종 결과 값은 하나의 값이 된다.</li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>].reduce(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">accumulator, currentValue, currentIndex, array</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">return</span> accumulator + currentValue;</span><br><span class="line">&#125;,firstValue); </span><br><span class="line"><span class="hljs-comment">// firstValue부터 계산된다. </span></span><br><span class="line"><span class="hljs-comment">// firstValue가 없으면 accumulator는 0, currentValue는 1로 계산된다.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>190422_Directions Reduction</title>
      <link href="/2019/04/21/190422_Directions%20Reduction/"/>
      <url>/2019/04/21/190422_Directions%20Reduction/</url>
      
        <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><pre><code>1. n</code></pre><a id="more"></a><p><br></p><h2 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">dirReduc</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    direc = &#123;</span><br><span class="line">        <span class="hljs-string">"NORTH"</span>: <span class="hljs-string">"SOUTH"</span>,</span><br><span class="line">        <span class="hljs-string">"SOUTH"</span>: <span class="hljs-string">"NORTH"</span>,</span><br><span class="line">        <span class="hljs-string">"EAST"</span>: <span class="hljs-string">"WEST"</span>,</span><br><span class="line">        <span class="hljs-string">"WEST"</span>: <span class="hljs-string">"EAST"</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="hljs-keyword">var</span> b = [];</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> ((b == []) || (direc[b[b.length - <span class="hljs-number">1</span>]] != arr[i])) &#123;</span><br><span class="line">            b.push(arr[i]);</span><br><span class="line">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="line">            c = b.pop();</span><br><span class="line">            <span class="hljs-keyword">if</span> (direc[c] == arr[i]) &#123;</span><br><span class="line">                arr.splice(i - <span class="hljs-number">1</span>, <span class="hljs-number">2</span>);</span><br><span class="line">                i = i - <span class="hljs-number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h2><pre><code>1.  내풀이 1<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>2.  풀이 과정 중 어려움<figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p><br></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><p><br></p><h3 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h3><p>1.</p><p><br></p><h3 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h3>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190420_SCSS 특강</title>
      <link href="/2019/04/20/190420/"/>
      <url>/2019/04/20/190420/</url>
      
        <content type="html"><![CDATA[<h2 id="node-sass-설치"><a href="#node-sass-설치" class="headerlink" title="node sass 설치"></a>node sass 설치</h2><ol><li>$ npm i -g node-sass</li><li>$ npm i -D node-sass</li><li>버전확인 : $ node-sass -v<pre><code>$ node -v</code></pre></li></ol><h2 id="SCSS-vs-CSS"><a href="#SCSS-vs-CSS" class="headerlink" title="SCSS vs CSS"></a>SCSS vs CSS</h2><a id="more"></a><p>nesting - 중첩<br>css<br>상위 계층 셀렉터 반복 기입<br><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &#123;</span><br><span class="line"><span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-tag">nav</span> &gt; <span class="hljs-selector-tag">ul</span> &gt; <span class="hljs-selector-tag">li</span> &gt; <span class="hljs-selector-tag">a</span> &#123;</span><br><span class="line"><span class="hljs-attribute">display</span>: block;</span><br><span class="line"><span class="hljs-attribute">padding</span>: <span class="hljs-number">6px</span> <span class="hljs-number">12px</span>;</span><br><span class="line"><span class="hljs-attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>scss<br>대세는 자바스크립트 안에 css코드를 삽입하는 방식으로 변하고 있음<br>scss 코드를 css코드로 변환시켜주어야 한다.<br><code>전처리</code> - 입력 데이터를 처리하여 컴파일러와 같은 다른 프로그램의 입력으로 사용되는 출력을 생성<br>출처: <a href="https://en.wikipedia.org/wiki/Preprocessing" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Preprocessing</a> </p><p>웹 브라우저에서 스타일링 언어로 인정하는 것은 css하나뿐임<br>nesting 되게 삽입<br>nav {<br>ul {<br>  margin: 0;<br>  padding: 0;<br>  list-style: none;<br>  li {<br>    display: inline-block;<br>    a {<br>      display: block;<br>      padding: 6px 12px;<br>      text-decoration: none;<br>    }<br>  }<br>}<br>}</p><p>그래서 command 입력<br>$ node-sass  scss-overview.scss  scss-overview.css</p><p>scss 파일을 css파일로 변환한다.</p><p>우리는 변환된 css 파일을 연결</p><p>설치한 node-sass는 이 변환작업을 위한 CLI를 제공한다.<br>이 변환 작업을 빌드(build) 또는 컴파일(compile) 이라고 한다.<br>또한 이 변환은 반드시 웹이 배포 되는 시점 이전에 처리 되므로 ‘전처리(preprocess)’이며, 이것이 Sass가 전처리기로 불리는 이유가 이것이다.</p><p>node-sass 명령어<br>–watch : [input]의 변화를 지속적으로 감지하여 [output]으로 빌드한다 (input, output에 넣으면 자동으로 계속 빌드된다.)<br>./style/scss : [input]<br>-o ./style/css : [output directory]</p><p>sass를 쓰게 되면 최신 css변수를 지원하지 않는 곳에서도 css를 사용할 수 있다.<br>sass에서는 //을 주석으로 쓸 수 있다.</p><p>‘$’ 문자로 시작되는 식별자로 선언.</p><p>scss<br>$font-stack : Helvetica, sans-serif;<br>$primary-color : #333;<br>body {<br>    font: 100% $font-stack;<br>    color: $primary-color;<br>}</p><p>css<br>body {<br>    font: 100% Helvetica, sans-serif;<br>    color: #333;<br>}</p><p>$ node-sass ./scss -o ./css<br>scss폴더를 만들어 폴더를 통째로 css로 바꿔준다.<br>bundling -&gt; overhead를 줄이기 위해</p><p>@import <em>./partials</em>;<br>sass파일 안에서 sass파일을 불러올 때는 위에 생략 가능</p><p>import로 연결하면 두번째 파일에 연결되어 있는 파일이 같이 css에 적히지만 파일이 두개가 생기는 문제 발생<br>두번째 파일 맨 앞에 _(언더바)를 붙이면 된다.<br>ex. _sass-overview2</p><p>@import “./sass-overview2”;<br>import한 위치에 파일 내용이 그대로 붙여짐</p><p>@import <em>./partilas</em>;<br>partials 파일 : 이름이 ‘_’로 시작하는 sass 파일<br>합쳐지는 쪽의 sass 파일(sass-overview.scss)에서 partials 파일 불러오기 :<br>‘@import‘ 룰을 사용 (.sass, .scss 생략 가능)</p><p>sass-overview.scss<br>@import “./sass-overview2”;</p><p>$font-stack : Helvetica, sans-serif;<br>$primary-color : #333;</p><p>body {<br>    font: 100% $font-stack;<br>    color: $primary-color;<br>}</p><p>sass-overview2.scss<br>.element {<br>    width: 100px;<br>}</p><p>sass-overview.css<br>.element {<br>    width: 100px;<br>}<br>body {<br>    font: 100% Helvetica, sans-serif;<br>    color: #333;<br>}</p><p>sass-overview2.css<br>.element {<br>    width: 100px;<br>}</p><p>@mixin<br>‘@mixin’ 디렉티브를 통해 선언하며 함수처럼 매개변수를 받을 수 있음.<br>‘@include’ 디렉티브를 통해 CSS 룰-셋 에서 믹스인을 호출 할 수 있으며, 호출문이 해당 믹스인의 콘텐츠로 치환.</p><p>scss<br>@mixin transform($property) {<br>    -webkit-transform: $property;<br>    -ms-transform: $property;<br>    transform: $property;<br>}<br>.box {<br>    @include transform(rotate(30deg));<br>}</p><p>css<br>.box {<br>    -webkit-transform: rotate(30deg);<br>    -ms-transform: rotate(30deg);<br>    transform: rotate(30deg);<br>}</p><p>@extend 디렉티브<br>@extned + 상속받고자 하는 룰셋<br>ex.  %message-shared {  //상속을 하고자 하는 룰셋, %를 앞에 작성하면 placeholder 셀렉터<br>    (호출하지 않으면 css파일에 나오지 않음, %가 없으면 실체를 가지게 된다.)가 된다.<br>        border: 1px solid #ccc;<br>        padding: 10px;<br>        color: #333;<br>    }</p><p>scss<br>%message-shared {<br>    border: 1px solid #ccc;<br>    padding: 10px;<br>    color: #333;<br>}</p><p>%equal-heights {<br>    display: flex;<br>    flex-wrap: wrap;<br>}</p><p>.message {<br>    @extend %message-shared;<br>}</p><p>.success {<br>    @extend %message-shared;<br>    border-color: green;<br>}</p><p>.error {<br>    @extend %message-shared;<br>    border-color: red;<br>}</p><p>.warning {<br>    @extend %message-shared;<br>    border-color: yellow;<br>}</p><p>css<br>%message-shared를 상속받은 셀렉터들이 같이 적힌다.<br>.message, .success, .error, .warning {<br>    border: 1px solid #ccc;<br>    padding: 10px;<br>    color: #333;<br>}</p><p>.success {<br>    border-color: green;<br>}  // 고유하게 갖는 것, extend로 공통으로 상속 받은 룰셋으로 만들지 않았기 때문</p><p>.error {<br>    border-color: red;<br>}</p><p>.warning {<br>    border-color: yellow;<br>}</p><p>operator(연산자)<br>사칙연산<br>모듈러 연산<br>scss<br>.container {<br>    width: 100%;<br>}<br>aside[role=”complementary”] // attribute selector, aside 내에 role이 main인 것을 선택<br>aside[role] aside 내에 role이라는 attribute를 가지고 있으면 선택<br>[role] 어떤 element이든 상관없이 선택<br>[attribute ~= “value”] : 위치 상관없이 가지고 있는 값<br>[attribute ^= “value”] : 시작하는 값<br>[attribute $= “value”] : 끝나는 값</p><p>article[role=”main”] {<br>    float: left;<br>    width: 600px / 960px <em> 100%;<br>}<br>aside[role=”complementary”] {<br>    float: right;<br>    width: 300px / 960px </em> 100%;<br>}</p><p>css<br>.container {<br>    width: 100%;<br>}<br>article[role=”main”] {<br>    float: left;<br>    width: 62.5%;<br>}<br>aside[role=”complementary”] {<br>    float: right;<br>    width: 31.25%;<br>}</p><p>기존 CSS 문법을 확장시킨 Sass의 요소들<br>    nested rule<br>    부모 참조 셀렉터 &amp;<br>    nested properties<br>    inline comment</p><p>부모참조 셀렉터<br>article {<br>&amp;.section1 { // 부모참조 셀렉터 &amp;<br>width: 800px;<br>margin:10px auto;<br>font: { // nested properties<br>size:14px;<br>family:’Nanum Gothic’, sans-serif;<br>}<br> &amp;는 안써도 오류는 안난다.</p><p>–css–style<br>$black:#000; // variable</p><p>td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba($black, 0.4);<br>}</p><p>article.section1 table td {<br>    padding: 12px 8px;<br>    text-align: center;<br>    border: 1px solid rgba(0, 0, 0, 0.4);<br>}</p><p>룰-셋 블록 내에 선언 시 지역변수.<br>    .x{<br>        $var_name : “var_value”<br>    }</p><p>지역변수 뒤에 ‘!global’ 선언 시 전역변수. (밖에서도 접근할 수 있음)<br>    .x{<br>        $var_name : “var_value” !global<br>    }</p><p>변수 이름 내의 ‘-’ 와 ‘_’ 문자를 구분하지 않음.<br>    $var_name = $var-name<br>    scss<br>    $main-width:100%;</p><pre><code>#sidebar2 {width: ($main_width/10); }css#sidebar2 {width: 10%; }</code></pre><p>‘!default’ 로 기본값 지정 가능.<br>$content: “First content”;<br>$content: “Second content?” !default;<br>default 때문에 무조건 첫번째 데이터 값으로 설정된다.</p><p>#main {<br>content: “First content”;<br>new-content: “First time reference”; }</p><p>data type<br><a href="https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types" target="_blank" rel="noopener">https://sass-lang.com/documentation/file.SASS_REFERENCE.html#data_types</a><br>scss의 string type은 두가지가 존재<br>“ “가 있는 문자열, “ “가 없는 문자열</p><p>property 이름 안에도 변수의 이름을 넣어 줄 수 있다.<br>prop #{$var}</p><p>$List1 : var1 var2(구분자는 , 와 공백이 가능하다.)<br>$List2 : var1 var2, val3 val 4 (구분자를 섞어서 사용하면 ,를 기준으로 list가 2개 만들어져서 list2에 들어간다, 이중 리스트)</p><p>built in fuction을 줘야만 참조가 가능하다.</p><p>@import<br>css 파일을 불러오는 경우에는 확장자까지 명시해주어야 한다.<br>여러 파일을 불러올  때<br>@import “file1”, “file2”;</p><p>@import “../../node_modules/normalize.css/normalize.css”;<br>를 하게되면 css에서는<br>@import url(“../../node_modules/normalize.css); 로 나온다.</p><p>@media<br>룰 셋 내부에 nested해서 사용할 수 있다. (@media끼리도 가능)</p><p>@extend<br>scss<br>.notice a%onlyone {<br>color:red;<br>text-decoration: none;<br>font-weight: bold;<br>}<br>.error {<br>@extend %onlyone;<br>}</p><p>css<br>.notice a.error {<br>color: red;<br>text-decoration: none;<br>font-weight: bold; }</p><p>상속받는 룰셋이 placeholder 안으로 들어가게 된다.</p><p>@at-root<br>중첩을 계속하게 되면 명시도가 높아진다.<br>가독성을 높이면서도 명시도를 높이지 않는 방법<br>scss<br>.sel1 {<br>    padding-top: 10px;<br>        @at-root .sel2 {<br>            margin:10px;<br>            @at-root .sel3 {<br>                padding: 20px;<br>            }<br>            .sel4 {<br>                font-size: 16px;<br>            }<br>        }<br>    }<br>css<br>.sel1 {<br>    padding-top: 10px;<br>}<br>.sel2 {<br>    margin: 10px;<br>}<br>.sel3 {<br>    padding: 20px;<br>}<br>.sel2 .sel4 {<br>    font-size: 16px;<br>}<br>룰을 전역으로 보내준다.</p><p>제어문<br>if(논리 표현식, true일 때, false일 때)<br>.firstClass {<br>    $color: if(true, blue, red);<br>    color:$color<br>}<br>if 논리 표현식 {true일 때} -&gt; false 일 때는 삽입되지 않는다.<br>.txt1 {<br>    color: white;<br>    @if normal == bold { font-weight: bold;}<br>}</p><p>for문</p><p>@for $i(변수선언) from 1 through 5 {<br>.col-#{$i} { width: (100/5*$i)+em;}<br>}</p><p>each<br>scss<br>@each $usr in bob, john, bill {<br>.#{$usr}-icon {<br>background-image: url(‘/img/#{$usr}.png’);<br>}<br>}<br>전역에서 돌리고 있음, 첫번째 돌 때 bob, 두번째 돌 때 john, 세번째 돌 때 bill이 들어감</p><p>$ppl: ( usr1:bob, usr2:john, usr3:bill );<br>@each $key, $usr in $ppl {<br>.#{$usr}-avatar {<br>background-image: url(‘/img/#{$usr}.png’);<br>}<br>}</p><p>@each $usr, $color, $value in (usr1, black, 1), (usr2, red, 2), (usr3, blue, 3) {<br>.#{$usr}-icon {<br>background-image: url(‘/img/#{$usr}.png’);<br>border:$value+px solid $color;<br>}<br>}</p><p>css<br>.bob-icon {<br>background-image: url(“/img/bob.png”); }<br>.john-icon {<br>background-image: url(“/img/john.png”); }<br>.bill-icon {<br>background-image: url(“/img/bill.png”); }</p><p>.bob-avatar {<br>background-image: url(“/img/bob.png”); }<br>.john-avatar {<br>background-image: url(“/img/john.png”); }<br>.bill-avatar {<br>background-image: url(“/img/bill.png”); }</p><p>.usr1-icon {<br>background-image: url(“/img/usr1.png”);<br>border: 1px solid black; }</p><p>while<br>scss<br>$i:1;<br>@while $i &lt; 5 {<br>.col-sm-#{$i} { width: 50 * $i +px}<br>$i : $i + 1 ;<br>}</p><p>css<br>.col-sm-1 {<br>width: 50px; }<br>.col-sm-2 {<br>width: 100px; }<br>.col-sm-3 {<br>width: 150px; }<br>.col-sm-4 {<br>width: 200px; }</p><p>mixin<br>매개변수를 주지 않을 때는 괄호 생략 가능<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> boldtext(<span class="hljs-variable">$size</span>, <span class="hljs-variable">$color</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">font</span>:&#123; // font를 prefix로 활용</span><br><span class="line">family: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif; </span><br><span class="line">weight:bold;</span><br><span class="line">size:<span class="hljs-variable">$size</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-attribute">color</span>:<span class="hljs-variable">$color</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext(<span class="hljs-number">24px</span>, <span class="hljs-number">#000</span>);</span><br><span class="line">@<span class="hljs-keyword">include</span> boldtext( <span class="hljs-variable">$color</span>:red, <span class="hljs-variable">$size</span>:<span class="hljs-number">36px</span>); </span><br><span class="line"><span class="hljs-comment">// 이름과 연결 시켜주면 매개변수의 순서가 달라도 된다.</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>@include<br>디렉티브를 통해 룰 셋에서 mixin을 호출할 수 있다.<br>호출문은 해당 mixin의 콘텐츠로 치환된다.</p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.boxsample3</span> &#123;</span><br><span class="line"><span class="hljs-attribute">font-family</span>: <span class="hljs-string">'Malgun Gothic'</span>, sans-serif;</span><br><span class="line"><span class="hljs-attribute">font-weight</span>: bold;</span><br><span class="line"><span class="hljs-attribute">font-size</span>: <span class="hljs-number">24px</span>;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#000</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin에서 받는 매개변수의 활용</p><p>마지막 매개변수 뒤에 …을 붙여 변수를 지정하면 javascript의 destructuring(구조 분해) 연산자 처럼 가능하다.<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> box-shadow(<span class="hljs-variable">$shadows</span>...) &#123;</span><br><span class="line">-moz-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">-webkit-<span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-variable">$shadows</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> box-shadow(<span class="hljs-number">0px</span> 4px 5px <span class="hljs-number">#666</span>, 2px 6px 10px <span class="hljs-number">#999</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.shadows</span> &#123;</span><br><span class="line"><span class="hljs-attribute">-moz-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">-webkit-box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>;</span><br><span class="line"><span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0px</span> <span class="hljs-number">4px</span> <span class="hljs-number">5px</span> <span class="hljs-number">#666</span>, <span class="hljs-number">2px</span> <span class="hljs-number">6px</span> <span class="hljs-number">10px</span> <span class="hljs-number">#999</span>; &#125;</span><br></pre></td></tr></table></figure><p>호출문에 … 사용<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> colors(<span class="hljs-variable">$text</span>, <span class="hljs-variable">$background</span>, <span class="hljs-variable">$border</span>) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-variable">$text</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-variable">$background</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-variable">$border</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-variable">$values</span>: <span class="hljs-number">#ff0000</span>, <span class="hljs-number">#00ff00</span>, <span class="hljs-number">#0000ff</span>;</span><br><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">include</span> colors(<span class="hljs-variable">$values</span>...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.primary</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0000</span>;</span><br><span class="line"><span class="hljs-attribute">background-color</span>: <span class="hljs-number">#00ff00</span>;</span><br><span class="line"><span class="hljs-attribute">border-color</span>: <span class="hljs-number">#0000ff</span>; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용1<br><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@<span class="hljs-keyword">mixin</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-tag">header</span> &#123; </span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="line">@<span class="hljs-keyword">content</span>; <span class="hljs-comment">// #logo가 header의 밑으로 삽입된다.</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="hljs-keyword">include</span> conbox &#123;</span><br><span class="line"><span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>:<span class="hljs-number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-tag">header</span> &#123;</span><br><span class="line"><span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-selector-tag">header</span> <span class="hljs-selector-id">#logo</span> &#123;</span><br><span class="line"><span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red; &#125;</span><br></pre></td></tr></table></figure><p>mixin 응용2</p><figure class="highlight scss hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-variable">$breakpoints</span>: (</span><br><span class="line">small: <span class="hljs-number">767px</span>,</span><br><span class="line">medium: <span class="hljs-number">992px</span>,</span><br><span class="line">large: <span class="hljs-number">1200px</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 미디어 쿼리를 만들어줌</span></span><br><span class="line">@<span class="hljs-keyword">mixin</span> respond-to(<span class="hljs-variable">$breakpoint</span>) &#123; </span><br><span class="line"><span class="hljs-comment">// 검사하고 싶은 key이름인 breakpoint가 breakpoints 내에 존재한다면~</span></span><br><span class="line">@<span class="hljs-keyword">if</span> map-has-key(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>) &#123;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: #&#123;<span class="hljs-selector-tag">map</span>-get(<span class="hljs-variable">$breakpoints</span>, <span class="hljs-variable">$breakpoint</span>)&#125;) &#123;</span><br><span class="line">@<span class="hljs-keyword">content</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment">// 예외처리</span></span><br><span class="line">@<span class="hljs-keyword">else</span> &#123;</span><br><span class="line">@<span class="hljs-keyword">warn</span> <span class="hljs-string">"Unfortunately, no value could be retrieved from `#&#123;$breakpoint&#125;`. "</span></span><br><span class="line">+ <span class="hljs-string">"Please make sure it is defined in `$breakpoints` map."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-comment">// respond-to안의 변수인 small이 mixin 안의 검사를 통해 breakpoints 안에 있으므로 </span></span><br><span class="line"><span class="hljs-comment">// #&#123;map-get($breakpoints, $breakpoint)&#125;을 통해 가지고 오고 싶은 small의 값을 가져오게 된다.</span></span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink;</span><br><span class="line">@<span class="hljs-keyword">include</span> respond-to(small) &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: hotpink; &#125;</span><br><span class="line">@<span class="hljs-keyword">media</span> (min-width: <span class="hljs-number">767px</span>) &#123;</span><br><span class="line"><span class="hljs-selector-class">.element</span> &#123;</span><br><span class="line"><span class="hljs-attribute">color</span>: tomato; &#125; &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190418_Dubstep</title>
      <link href="/2019/04/18/190418-Dubstep/"/>
      <url>/2019/04/18/190418-Dubstep/</url>
      
        <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><ol><li>문자열에서 “WUB”이라는 문자가 단어의 사이 사이에는 1개 이상  </li><li>단어의 맨 끝에는 0개 또는 1개가 올 수 있다.</li><li>“WUB”을 제거하고 단어와 단어 사이에 하나의 공백으로 return<br> ex. WUB  WUB  I  WUB  AM  WUB  WUB  X<br> return  “I AM X”  </li></ol><a id="more"></a><p><br></p><h2 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> join = <span class="hljs-string">""</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> arr = [];</span><br><span class="line"><span class="hljs-keyword">var</span> wub = song.replace(<span class="hljs-regexp">/WUB/gi</span>, <span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">var</span> a = wub.split(<span class="hljs-string">" "</span>);</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">if</span> (a[i] !== <span class="hljs-string">""</span>) &#123;</span><br><span class="line">arr.push(a[i]);</span><br><span class="line">join = arr.join(<span class="hljs-string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> join;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h2><p><code>/search value/</code> : //사이에 검색할 문자를 입력<br><code>플래그</code><br><code>g</code>는 전체 모든 문자열을 변경한다는 말 : global<br><code>i</code>는 영문 대소문자 구분 없는 검색: case-intensive<br><code>m</code>은 여러 줄 검색 : multi-line search  </p><p><br></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">songDecoder</span>(<span class="hljs-params">song</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/@+/gi</span>;</span><br><span class="line">song1 = song.replace(<span class="hljs-regexp">/WUB/gi</span>, ‘@’).replace(<span class="hljs-regexp">/@+/gi</span>, <span class="hljs-string">' '</span>).replace(<span class="hljs-regexp">/^ | $/gi</span>,‘’);</span><br><span class="line"><span class="hljs-keyword">return</span> song1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h3><ol><li><code>replace(/WUB/gi, &quot; &quot;)</code>에서 공백을 @로 바꿔줌 <code>replace(/WUB/gi, ‘@’)</code></li><li>replace를 한번 더 써서 모든@를 하나의 공백으로 바꿔 줌  </li><li><code>replace(/^ | $/gi,‘’)</code> : 처음 시작부터 공백이 있거나 맨 뒤에 공백이 있으면 삭제  </li></ol><p><br></p><h3 id="알게-된-것"><a href="#알게-된-것" class="headerlink" title="알게 된 것"></a>알게 된 것</h3><p><code>trim( )</code> : 문자열 양 끝의 공백을 제거한다.<br><code>filter(word=&gt;word!=&#39;&#39;)</code> :  word라는 변수와 word가 “”(공백)이 아닌 것을 return<br><code>filter(parameter =&gt; return)</code> : 배열에 사용할 수 있음  </p><p><code>replace(/(^\s*)|(\s*$)/gi, &quot;&quot;)</code>  : 맨 앞과 맨 뒤의 공백 제거<br><code>replace(/(WUB)+/g,&quot; &quot;)</code> : 한번 이상(+)인 WUB를 공백 하나로 바꿔주기  </p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190417_Multiples of 3 or 5</title>
      <link href="/2019/04/16/190417_Multiples%20of%203%20or%205/"/>
      <url>/2019/04/16/190417_Multiples%20of%203%20or%205/</url>
      
        <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><pre><code>1. number이하의 숫자가 주어진다.2. number보다 작은 모든 3의 배수를 다 더한다.3. number보다 작은 모든 5의 배수를 다 더한다.4. 다 더한 3의 배수와 5의 배수의 합을 return5. 단, 3과 5의 공배수는 한번만 더한다.</code></pre><a id="more"></a><p><br></p><h2 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">number</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">var</span> count3 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">var</span> count5 = <span class="hljs-number">0</span>;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">3</span>; i++) &#123;</span><br><span class="line"><span class="hljs-keyword">var</span> temp = <span class="hljs-number">0</span>;</span><br><span class="line">temp = <span class="hljs-number">3</span> * i;</span><br><span class="line"><span class="hljs-keyword">if</span> ((temp % <span class="hljs-number">5</span>) !== <span class="hljs-number">0</span>) &#123;</span><br><span class="line">count3 += temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt; number / <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="line">count5 += <span class="hljs-number">5</span> * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="hljs-keyword">return</span> count3 + count5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h2><ol><li>number를 각각 3과 5로 나눈 몫을 구한다.</li><li>3의 몫으로 나온 숫자의 미만만큼( i ) 3을 곱하는 반복문으로 3의 배수를 구한다.<br> ex. 몫이 3.5이면 3 x 1, 3 x 2, 3 x 3 = 3, 6, 9를 구함.</li><li>3의 배수를 count3이라는 변수에 모두 더한다.</li><li><p>단, 3 x i 를 5로 나눈 나머지가 0이 된다면(5의 배수라면) 더하지 않는다.</p></li><li><p>5의 몫으로 나온 숫자의 미만만큼( i ) 5를 곱하는 반복문으로 5의 배수를 구한다.<br>ex. 몫이 3.5이면 5 x 1, 5 x 2, 5 x 3 = 5, 10, 15를 구함.</p></li><li>5의 배수를 count5이라는 변수에 모두 더한다.<br><code>3의 배수를 모두 더하는 과정에서 3과 5의 배수를 제거해줬으므로 5의 배수를 더하는 과정에서는 모두 더해도 상관없다.</code></li><li>count3 + count5를 반환한다.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190416_remove-element</title>
      <link href="/2019/04/16/190416_remove-element/"/>
      <url>/2019/04/16/190416_remove-element/</url>
      
        <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><pre><code>1. nums에는 정렬되지 않은 배열이 들어옴2. 배열 nums에서 val값이 있으면 삭제3. val값이 삭제된 배열 nums의 길이를 return</code></pre><a id="more"></a><p><br></p><h2 id="내-코드"><a href="#내-코드" class="headerlink" title="내 코드"></a>내 코드</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums.indexOf(val) !== <span class="hljs-number">-1</span>) &#123;</span><br><span class="line">            nums.splice(nums.indexOf(val), <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><br></p><h2 id="내-풀이"><a href="#내-풀이" class="headerlink" title="내 풀이"></a>내 풀이</h2><ol><li><p>배열에서 val의 값을 찾아 삭제하기  </p><ul><li><p>indexOf를 사용해서 배열 nums안에 있는 val의 index를 반환</p></li><li><p>splice를 사용해서 배열 nums에서 val의 index를 이용해 제거</p></li></ul></li></ol><ol start="2"><li><p>오류  </p><p>경우 1.</p></li></ol><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> nums = [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>] </span><br><span class="line"><span class="hljs-keyword">var</span> val = <span class="hljs-number">2</span></span><br><span class="line">i = <span class="hljs-number">0</span></span><br></pre></td></tr></table></figure><p>일때 nums에서 2가 하나 삭제된다.<br>nums =&gt; [2]</p><p>i = 1 일때 <code>nums의 길이가 1이 되었으므로 nums.length는 1</code>이 되어 반복문을 빠져나온다.<br>nums =&gt; [2]</p><p><strong>오류 발생</strong><br><code>solution</code> : nums가 하나 삭제될때마다 length가 줄어들고 기존 숫자들의 index가 바뀌기 때문에 i에서 1을 빼주어야 한다.</p><p><br></p><h2 id="다른-사람-풀이"><a href="#다른-사람-풀이" class="headerlink" title="다른 사람 풀이"></a>다른 사람 풀이</h2><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">var</span> removeElement = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">nums, val</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="hljs-keyword">if</span> (nums[i] === val) &#123;</span><br><span class="line">            nums.splice(i, <span class="hljs-number">1</span>);</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> nums.length;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="다른점"><a href="#다른점" class="headerlink" title="다른점"></a>다른점</h3><ol><li>nums의 특정 index값과 val을 비교  </li></ol><p><strong>javascript에는 연산자를 두개를 잘 쓰지 않는다.  ===을 쓸 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190313_hexo</title>
      <link href="/2019/03/13/190313_hexo/"/>
      <url>/2019/03/13/190313_hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="실행-전"><a href="#실행-전" class="headerlink" title="실행 전"></a>실행 전</h3><ol><li>node js, git 설치 필수</li><li>node js 버전에 따라 실행되지 않을 수 있다.</li><li>window는 git bash에서 작업 시 작업 안될 수 있다.</li></ol><a id="more"></a><p><code>npm install -g hexo-cli</code> - 헥소 설치<br><code>hexo --version</code> - 헥소 버전확인<br><code>init blog</code> -블로그(파일) 생성<br><code>cd blog</code> - (블로그 이동)[블로그 안에서 해줘야 함]<br><code>npm install</code> - npm 설치<br><code>npm install hexo-deployer-git --save</code><br><code>hexo new port &quot;title&quot;</code><br><code>hexo generate</code><br><code>hexo server</code> - 서버 확인<br><code>hexo deploy</code></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>190306_git, web</title>
      <link href="/2019/03/06/190306_git,%20web/"/>
      <url>/2019/03/06/190306_git,%20web/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><p><code>Git</code> :  <code>분산 버전 관리 시스템</code>, 여러 개발자가 같은 프로젝트를 진행할 때 자신의 컴퓨터로 협업하면서 개발이 가능한 시스템이다.  </p><p>git에는 로컬 저장소에 commit하기 전, <code>index 단계</code>가 있다.</p><p><code>index 단계</code>는 <code>stage 영역</code>이라고도  한다.</p><p><code>stage 영역</code> : 작업한 내용을 로컬 저장소에 commit하려고 할 때, commit할 파일에 대한 정보를 저장하는 공간이다.</p><p><br><br><a id="more"></a><br><img src="/images/img/190306/Git.png" width="700" title="test_title" alt="test_alt"></p><p><br></p><h2 id="Commit-과정-발생한-에러"><a href="#Commit-과정-발생한-에러" class="headerlink" title="Commit 과정 발생한 에러"></a>Commit 과정 발생한 에러</h2><p>git bash로 git에 있는 폴더를 연결을 하다 에러가 났다.</p><p>수업시간에 실습했던 것은 아무 파일이 없는 <code>새 폴더</code>였다.</p><p>하지만 기존에 내 git에 있는 폴더에 새 파일을 commit하려고 하니 에러가 발생했다.</p><p>에러 메세지에는 git –help라는 말과 git –pull이라는 말이 적혀있었는데 솔직히 무슨 말인지 못알아들었었다.</p><p><br></p><p>하지만, 다음 날에 조원과 협업을 하는 과정에서 해결했다.  </p><p>기존 git의 폴더에 저장된 파일이 있을 경우 내 workspace에다 파일을 끌어와야 했다.</p><p><code>[git clone + git폴더 주소 + 주소에 있는 파일을 복사할 내 workspace 폴더의 이름]</code></p><p>이렇게 입력을 먼저 해주고 <code>[git remote get-url origin]</code>과 연결한 workspace 폴더에서 [ls]을 통해 잘 연결되었는지 확인한다.  </p><p><strong>※ 여기서 origin은 기본값</strong></p><p><br></p><h2 id="잘-연결이-되었다면"><a href="#잘-연결이-되었다면" class="headerlink" title="잘 연결이 되었다면!"></a>잘 연결이 되었다면!</h2><pre><code>1. git add index.html (index.html이라는 파일을 만들었다는 가정 하에)2. git commit3. git push -u origin master (-u는 처음 commit할 때 한번만 써주면 된다.)</code></pre><p><strong>※ 중요한 것은 틈틈히 git status를 통해 상태를 확인하면서 작업할 것!</strong></p>]]></content>
      
      
      <categories>
          
          <category> Unknown term </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unknown term </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
